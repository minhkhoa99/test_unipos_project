{"ast":null,"code":"// Generated by CoffeeScript 1.6.3\n(function () {\n  var O,\n    STATE_ATTRIBUTES,\n    State,\n    StateEventEmitter,\n    StateExpression,\n    TRAVERSAL_FLAGS,\n    TransitionExpression,\n    state,\n    __hasProp = {}.hasOwnProperty,\n    __indexOf = [].indexOf || function (item) {\n      for (var i = 0, l = this.length; i < l; i++) {\n        if (i in this && this[i] === item) return i;\n      }\n      return -1;\n    },\n    __slice = [].slice;\n  O = require('omicron');\n  state = require('./state-function');\n  StateEventEmitter = null;\n  StateExpression = null;\n  TransitionExpression = null;\n  STATE_ATTRIBUTES = state.STATE_ATTRIBUTES, TRAVERSAL_FLAGS = state.TRAVERSAL_FLAGS;\n  module.exports = State = function () {\n    var ABSTRACT, ABSTRACT_OR_CONCRETE, ATOMIC, CONCLUSIVE, CONCRETE, CONCURRENT, DEFAULT, DESTROYED, FINAL, FINITE, HISTORY, IMMUTABLE, INCIPIENT, INCIPIENT_OR_MUTABLE, INCIPIENT_OR_VIRTUAL, INITIAL, MUTABLE, MUTABLE_OR_FINITE, NIL, NORMAL, PARASTATIC, PROTO_HERITABLE_ATTRIBUTES, REFLECTIVE, RETAINED, SHALLOW, STATIC, VIA_ALL, VIA_NONE, VIA_PROTO, VIA_SUB, VIA_SUPER, VIRTUAL, assign, clone, createDispatcher, delta, edit, env, flatten, has, hasOwn, isArray, isEmpty, lookup, memoizeProtostates, useDispatchTables, _ref, _ref1, _ref2;\n    _ref = state.options, memoizeProtostates = _ref.memoizeProtostates, useDispatchTables = _ref.useDispatchTables;\n    env = O.env, NIL = O.NIL, isArray = O.isArray, isEmpty = O.isEmpty, has = O.has, hasOwn = O.hasOwn;\n    assign = O.assign, edit = O.edit, delta = O.delta, clone = O.clone, lookup = O.lookup, flatten = O.flatten;\n    _ref1 = assign(State, STATE_ATTRIBUTES), INCIPIENT = _ref1.INCIPIENT, ATOMIC = _ref1.ATOMIC, DESTROYED = _ref1.DESTROYED, VIRTUAL = _ref1.VIRTUAL, PARASTATIC = _ref1.PARASTATIC, MUTABLE = _ref1.MUTABLE, FINITE = _ref1.FINITE, STATIC = _ref1.STATIC, IMMUTABLE = _ref1.IMMUTABLE, INITIAL = _ref1.INITIAL, CONCLUSIVE = _ref1.CONCLUSIVE, FINAL = _ref1.FINAL, ABSTRACT = _ref1.ABSTRACT, CONCRETE = _ref1.CONCRETE, DEFAULT = _ref1.DEFAULT, REFLECTIVE = _ref1.REFLECTIVE, HISTORY = _ref1.HISTORY, RETAINED = _ref1.RETAINED, SHALLOW = _ref1.SHALLOW, CONCURRENT = _ref1.CONCURRENT, NORMAL = _ref1.NORMAL;\n    _ref2 = assign(State, TRAVERSAL_FLAGS), VIA_NONE = _ref2.VIA_NONE, VIA_SUB = _ref2.VIA_SUB, VIA_SUPER = _ref2.VIA_SUPER, VIA_PROTO = _ref2.VIA_PROTO, VIA_ALL = _ref2.VIA_ALL;\n    MUTABLE_OR_FINITE = MUTABLE | FINITE;\n    ABSTRACT_OR_CONCRETE = ABSTRACT | CONCRETE;\n    INCIPIENT_OR_VIRTUAL = INCIPIENT | VIRTUAL;\n    INCIPIENT_OR_MUTABLE = INCIPIENT | MUTABLE;\n    PROTO_HERITABLE_ATTRIBUTES = PARASTATIC | MUTABLE | FINITE | STATIC | IMMUTABLE | INITIAL | CONCLUSIVE | FINAL | ABSTRACT | CONCRETE | DEFAULT | REFLECTIVE | HISTORY | RETAINED | SHALLOW | CONCURRENT | NORMAL;\n    State.prototype.Metaobject = null;\n    State.prototype.Expression = null;\n    function State(base, name, expression) {\n      var attributes, owner, protoAttr, protostate, root, superAttr, superstate;\n      this.name = name;\n      if (base instanceof State) {\n        superstate = base;\n        root = superstate.root;\n        owner = root.owner;\n      } else {\n        superstate = null;\n        root = this;\n        owner = base;\n      }\n      this.owner = owner;\n      this.root = root;\n      this.superstate = superstate;\n      this.protostate = protostate = this.getProtostate() || null;\n      this.order = null;\n      attributes = (expression != null ? expression.attributes : void 0) || NORMAL;\n      if (superstate != null) {\n        superAttr = superstate.attributes;\n        attributes |= superAttr & MUTABLE_OR_FINITE;\n      }\n      if (protostate != null) {\n        protoAttr = protostate.attributes & PROTO_HERITABLE_ATTRIBUTES;\n        if (attributes & CONCRETE) {\n          attributes &= ~ABSTRACT;\n        }\n        if (attributes & ABSTRACT_OR_CONCRETE) {\n          protoAttr &= ~ABSTRACT_OR_CONCRETE;\n        }\n        attributes |= protoAttr;\n      }\n      if (~attributes & ABSTRACT) {\n        attributes |= CONCRETE;\n      }\n      attributes |= (superAttr | protoAttr) & IMMUTABLE;\n      if (attributes & IMMUTABLE) {\n        attributes = attributes & ~MUTABLE | FINITE;\n      }\n      this.attributes = attributes;\n      if (!(attributes & VIRTUAL)) {\n        this.initialize(expression);\n      }\n      if (env.debug) {\n        this[' <path>'] = this.path();\n        this['<attributes>'] = StateExpression.decodeAttributes(attributes);\n      }\n    }\n    createDispatcher = function () {\n      var toString;\n      toString = function () {\n        return \"[dispatcher]\";\n      };\n      return function (accessorName, methodName, original) {\n        var dispatcher;\n        dispatcher = function () {\n          return this[accessorName]().apply(methodName, arguments);\n        };\n        dispatcher.isDispatcher = true;\n        if (env.debug) {\n          dispatcher.toString = toString;\n        }\n        if (original) {\n          dispatcher.original = original;\n        }\n        return dispatcher;\n      };\n    }();\n    State.prototype.initialize = function (expression) {\n      var attributes;\n      attributes = this.attributes;\n      if (attributes & VIRTUAL) {\n        return;\n      }\n      this.attributes |= INCIPIENT;\n      this.realize(expression);\n      this.attributes &= ~INCIPIENT;\n      this.emit('construct', expression, VIA_PROTO);\n      return this;\n    };\n    State.prototype.realize = function (expression) {\n      var attributes, key, method, name, parastates, ss, substates, _base, _ref3;\n      attributes = this.attributes, name = this.name;\n      if (!(attributes & INCIPIENT_OR_VIRTUAL)) {\n        return this;\n      }\n      if (attributes & VIRTUAL) {\n        if (ss = this.superstate) {\n          if (ss.attributes & VIRTUAL) {\n            ss.realize();\n          }\n          substates = (_base = ss._).substates != null ? (_base = ss._).substates : _base.substates = {};\n          if (substates[name] != null) {\n            substates[name].destroy();\n          }\n          substates[name] = this;\n        }\n        this.attributes &= ~VIRTUAL;\n      }\n      if (this._ == null) {\n        this._ = new this.Metaobject();\n      }\n      if (parastates = expression != null ? expression.parastates : void 0) {\n        if (isArray(parastates)) {\n          parastates = parastates.join(',');\n        }\n        if (typeof parastates !== 'string') {\n          throw TypeError;\n        }\n        parastates = parastates.split(/\\s*,\\s*/);\n        if (parastates.length) {\n          this._.parastates = parastates;\n          this.attributes |= PARASTATIC;\n        }\n      }\n      if (expression != null) {\n        this.mutate(expression);\n      }\n      if (this === this.root) {\n        _ref3 = this.owner;\n        for (key in _ref3) {\n          if (!__hasProp.call(_ref3, key)) continue;\n          method = _ref3[key];\n          if (key !== 'constructor' && typeof method === 'function' && !method.isDispatcher && this.method(key, VIA_PROTO)) {\n            this.addMethod(key, method);\n          }\n        }\n      }\n      if (this === this.root || ~attributes & INCIPIENT) {\n        this.linearize(VIA_SUB);\n      }\n      return this;\n    };\n    State.prototype.virtualize = function (inheritor) {\n      var derivation, expr, i, name, real, s;\n      if (!(inheritor instanceof State && this.owner.isPrototypeOf(inheritor.owner))) {\n        return null;\n      }\n      if (!(derivation = this.derivation(true)).length) {\n        return null;\n      }\n      i = 0;\n      s = inheritor.root;\n      while (name = derivation[i++]) {\n        if (!(real = s.substate(name, VIA_NONE))) {\n          break;\n        }\n        s = real;\n      }\n      expr = {\n        attributes: VIRTUAL\n      };\n      while (name) {\n        s = new State(s, name, expr);\n        name = derivation[i++];\n      }\n      return s;\n    };\n    State.prototype.linearize = function () {\n      var getParastateDeclarations, linearize, merge;\n      getParastateDeclarations = function () {\n        var head, ps, tail, _ref3, _ref4;\n        head = (_ref3 = this._) != null ? _ref3.parastates : void 0;\n        if (ps = this.protostate) {\n          tail = getParastateDeclarations.call(ps);\n        }\n        if (tail != null) {\n          return (_ref4 = head != null ? head.concat(tail) : void 0) != null ? _ref4 : tail;\n        } else {\n          return head;\n        }\n      };\n      merge = function (out, lists) {\n        var bad, head, headList, i, index, item, list, otherList, remainingLists, _i, _j, _k, _len, _len1, _len2;\n        if (!lists.length) {\n          return out;\n        }\n        for (index = _i = 0, _len = lists.length; _i < _len; index = ++_i) {\n          headList = lists[index];\n          if (!(headList != null)) {\n            continue;\n          }\n          head = headList[0];\n          bad = false;\n          for (_j = 0, _len1 = lists.length; _j < _len1; _j++) {\n            otherList = lists[_j];\n            if (!(otherList !== headList)) {\n              continue;\n            }\n            i = 1;\n            while (item = otherList[i++]) {\n              if (item === head) {\n                bad = true;\n                break;\n              }\n            }\n            if (bad) {\n              break;\n            }\n          }\n          if (bad) {\n            continue;\n          }\n          out.push(head);\n          remainingLists = [];\n          for (_k = 0, _len2 = lists.length; _k < _len2; _k++) {\n            list = lists[_k];\n            if (list[0] === head) {\n              list.shift();\n            }\n            if (list.length) {\n              remainingLists.push(list);\n            }\n          }\n          return merge(out, remainingLists);\n        }\n        throw new TypeError(\"Ambiguous resolution order for '\" + out.pop() + \"'\");\n      };\n      return linearize = function (via) {\n        var lists, name, order, owner, parastate, parent, parents, path, paths, s, _i, _j, _len, _len1, _ref3, _ref4;\n        if (via == null) {\n          via = VIA_NONE;\n        }\n        if (this === this.root) {\n          order = [this];\n        } else {\n          parents = [];\n          if (paths = getParastateDeclarations.call(this)) {\n            owner = this.owner;\n            for (_i = 0, _len = paths.length; _i < _len; _i++) {\n              path = paths[_i];\n              if (!(parastate = state.own(owner, path))) {\n                throw new ReferenceError(\"Unresolvable parastate '\" + path + \"'\");\n              }\n              if (__indexOf.call(parents, parastate) < 0) {\n                parents.push(parastate);\n              }\n            }\n          }\n          parents.push(this.superstate);\n          lists = [];\n          for (_j = 0, _len1 = parents.length; _j < _len1; _j++) {\n            parent = parents[_j];\n            lists.push(((_ref3 = parent.order) != null ? _ref3 : parent.linearize()).slice(0));\n          }\n          lists.push(parents);\n          order = merge([this], lists);\n        }\n        this.order = order;\n        if (via & VIA_SUB) {\n          _ref4 = this._.substates;\n          for (name in _ref4) {\n            if (!__hasProp.call(_ref4, name)) continue;\n            s = _ref4[name];\n            s.linearize(via);\n          }\n        }\n        return order;\n      };\n    }();\n    State.prototype.express = function () {\n      var cloneCategory, cloneEvents, cloneSubstates, express;\n      cloneCategory = function (object) {\n        var key, out, value;\n        if (object == null) {\n          return;\n        }\n        for (key in object) {\n          out = {};\n          break;\n        }\n        if (out) {\n          for (key in object) {\n            value = object[key];\n            out[key] = value && typeof value === 'object' ? clone(value) : value;\n          }\n        }\n        return out;\n      };\n      cloneEvents = function (events) {\n        var emitter, out, type;\n        if (events == null) {\n          return;\n        }\n        for (type in events) {\n          emitter = events[type];\n          if (emitter) {\n            out = {};\n            break;\n          }\n        }\n        for (type in events) {\n          emitter = events[type];\n          if (emitter) {\n            out[type] = clone(emitter.items);\n          }\n        }\n        return out;\n      };\n      cloneSubstates = function (substates, typed) {\n        var name, out, substate;\n        if (substates == null) {\n          return;\n        }\n        for (name in substates) {\n          out = {};\n          break;\n        }\n        for (name in substates) {\n          substate = substates[name];\n          out[name] = substate.express(typed);\n        }\n        return out;\n      };\n      return express = function (typed) {\n        var expression, _;\n        if (_ = this._) {\n          expression = edit({}, {\n            attributes: this.attributes,\n            data: cloneCategory(_.data),\n            methods: cloneCategory(_.methods),\n            events: cloneEvents(_.events),\n            guards: cloneCategory(_.guards),\n            states: cloneSubstates(_.substates, typed),\n            transitions: cloneCategory(_.transitions)\n          });\n        }\n        if (typed) {\n          return new this.Expression(expression);\n        } else {\n          return expression;\n        }\n      };\n    }();\n    State.prototype.mutate = function () {\n      var diff, editEvent, isPlainObject, mutate;\n      NIL = O.NIL, isArray = O.isArray, isEmpty = O.isEmpty, isPlainObject = O.isPlainObject, edit = O.edit, diff = O.diff;\n      editEvent = function (object, emitter) {\n        var items, key, value, _results;\n        items = emitter.items;\n        _results = [];\n        for (key in object) {\n          if (!__hasProp.call(object, key)) continue;\n          value = object[key];\n          if (value === NIL) {\n            _results.push(emitter.remove(key));\n          } else if (value && value !== items[key]) {\n            _results.push(emitter.set(key, value));\n          } else {\n            _results.push(void 0);\n          }\n        }\n        return _results;\n      };\n      return mutate = function (expr) {\n        var Expression, after, attributes, before, data, element, emitter, event, events, guards, incipient, method, methods, mutable, name, residue, stateExpr, substates, transitionExpr, transitions, type, _base, _base1, _i, _len, _ref3, _ref4, _ref5, _ref6, _ref7;\n        attributes = this.attributes, Expression = this.Expression;\n        incipient = attributes & INCIPIENT;\n        if (!incipient && attributes & IMMUTABLE) {\n          return;\n        }\n        mutable = incipient || attributes & MUTABLE;\n        if (attributes & VIRTUAL) {\n          this.realize();\n        }\n        _ref3 = this._, data = _ref3.data, methods = _ref3.methods, events = _ref3.events, guards = _ref3.guards, substates = _ref3.substates, transitions = _ref3.transitions;\n        if (!(expr instanceof Expression)) {\n          expr = new Expression(expr);\n        }\n        if (!incipient) {\n          before = this.express();\n        }\n        this.attributes |= ATOMIC;\n        if (expr.data) {\n          this.data(expr.data);\n        }\n        if (mutable) {\n          _ref4 = expr.methods;\n          for (name in _ref4) {\n            if (!__hasProp.call(_ref4, name)) continue;\n            method = _ref4[name];\n            if (method !== NIL) {\n              this.addMethod(name, method);\n            } else {\n              this.removeMethod(name);\n            }\n          }\n        }\n        if (mutable) {\n          _ref5 = expr.events;\n          for (type in _ref5) {\n            if (!__hasProp.call(_ref5, type)) continue;\n            event = _ref5[type];\n            events || (events = (_base = this._).events || (_base.events = {}));\n            emitter = events[type];\n            if (event === NIL) {\n              if (emitter != null) {\n                emitter.empty();\n              }\n              continue;\n            }\n            if (!emitter && event && !isEmpty(event)) {\n              emitter = events[type] = new StateEventEmitter(this, type);\n            }\n            if (isArray(event)) {\n              for (_i = 0, _len = event.length; _i < _len; _i++) {\n                element = event[_i];\n                if (element != null && element !== NIL) {\n                  if (isPlainObject(element)) {\n                    editEvent(element, emitter);\n                  } else {\n                    this.addEvent(type, element);\n                  }\n                }\n              }\n            } else {\n              if (isPlainObject(event)) {\n                editEvent(event, emitter);\n              }\n            }\n            if (!emitter.length) {\n              emitter.destroy();\n              delete events[type];\n            }\n          }\n        }\n        if (mutable && expr.guards) {\n          guards || (guards = (_base1 = this._).guards || (_base1.guards = {}));\n          edit('deep', guards, expr.guards);\n        }\n        _ref6 = expr.substates;\n        for (name in _ref6) {\n          if (!__hasProp.call(_ref6, name)) continue;\n          stateExpr = _ref6[name];\n          if (substates && name in substates) {\n            if (stateExpr === NIL) {\n              this.removeSubstate(name);\n            } else {\n              substates[name].mutate(stateExpr);\n            }\n          } else {\n            if (stateExpr !== NIL) {\n              this.addSubstate(name, stateExpr);\n            }\n          }\n        }\n        if (mutable) {\n          _ref7 = expr.transitions;\n          for (name in _ref7) {\n            if (!__hasProp.call(_ref7, name)) continue;\n            transitionExpr = _ref7[name];\n            if (transitions && name in transitions) {\n              if (transitionExpr === NIL) {\n                delete transitions[name];\n              } else {\n                transitions[name] = new TransitionExpression(transitionExpr);\n              }\n            } else {\n              if (transitionExpr !== NIL) {\n                this.addTransition(name, transitionExpr);\n              }\n            }\n          }\n        }\n        this.attributes &= ~ATOMIC;\n        if (!incipient) {\n          after = this.express();\n          residue = diff(before, after);\n          if (!isEmpty(residue)) {\n            this.emit('mutate', [expr, residue, before, after], VIA_PROTO);\n          }\n        }\n        return this;\n      };\n    }();\n    State.prototype.destroy = function () {\n      var dispatcher, event, events, key, methods, name, owner, ownerMethod, root, substate, substates, superstate, transition, _;\n      owner = this.owner, root = this.root, superstate = this.superstate, _ = this._;\n      if (_) {\n        methods = _.methods, events = _.events, substates = _.substates;\n      }\n      if (transition = root._transition) {\n        if (this === root) {\n          transition.abort();\n        } else {\n          if (transition.origin.isIn(this) || transition.target.isIn(this)) {\n            return false;\n          }\n        }\n      }\n      for (name in substates) {\n        if (!__hasProp.call(substates, name)) continue;\n        substate = substates[name];\n        substate.destroy();\n      }\n      this.emit('destroy', VIA_PROTO);\n      if (events) {\n        for (key in events) {\n          event = events[key];\n          event.destroy();\n          delete events[key];\n        }\n      }\n      if (this === root) {\n        for (name in methods) {\n          if (!(dispatcher = owner[name])) {\n            continue;\n          }\n          if (!dispatcher.isDispatcher) {\n            continue;\n          }\n          if (ownerMethod = dispatcher.original) {\n            owner[name] = ownerMethod;\n          } else {\n            delete owner[name];\n          }\n        }\n        delete owner[this.accessorName];\n      }\n      this._ = null;\n      this.attributes |= DESTROYED;\n      if (superstate != null) {\n        superstate.removeSubstate(this.name);\n      }\n      return true;\n    };\n    State.prototype.isVirtual = function () {\n      return !!(this.attributes & VIRTUAL);\n    };\n    State.prototype.isMutable = function () {\n      return !!(this.attributes & MUTABLE);\n    };\n    State.prototype.isFinite = function () {\n      return !!(this.attributes & FINITE);\n    };\n    State.prototype.isStatic = function () {\n      return !!(this.attributes & STATIC);\n    };\n    State.prototype.isImmutable = function () {\n      return !!(this.attributes & IMMUTABLE);\n    };\n    State.prototype.isInitial = function () {\n      return !!(this.attributes & INITIAL);\n    };\n    State.prototype.isConclusive = function () {\n      return !!(this.attributes & CONCLUSIVE);\n    };\n    State.prototype.isFinal = function () {\n      return !!(this.attributes & FINAL);\n    };\n    State.prototype.isAbstract = function () {\n      return !!(this.attributes & ABSTRACT);\n    };\n    State.prototype.isConcrete = function () {\n      return !!(this.attributes & CONCRETE);\n    };\n    State.prototype.isDefault = function () {\n      return !!(this.attributes & DEFAULT);\n    };\n    State.prototype.isReflective = function () {\n      return !!(this.attributes & REFLECTIVE);\n    };\n    State.prototype.hasHistory = function () {\n      return !!(this.attributes & HISTORY);\n    };\n    State.prototype.isRetained = function () {\n      return !!(this.attributes & RETAINED);\n    };\n    State.prototype.isShallow = function () {\n      return !!(this.attributes & SHALLOW);\n    };\n    State.prototype.isConcurrent = function () {\n      return !!(this.attributes & CONCURRENT);\n    };\n    State.prototype.substate = function (name, via) {\n      var s, ss, _ref3, _ref4, _ref5;\n      if (via == null) {\n        via = VIA_PROTO;\n      }\n      s = this.root._current;\n      while ((s != null ? s.attributes : void 0) & VIRTUAL && (ss = s.superstate)) {\n        if (ss === this && s.name === name) {\n          return s;\n        }\n        s = ss;\n      }\n      return ((_ref3 = this._) != null ? (_ref4 = _ref3.substates) != null ? _ref4[name] : void 0 : void 0) || via & VIA_PROTO && ((_ref5 = this.protostate) != null ? _ref5.substate(name) : void 0);\n    };\n    State.prototype.substates = function (virtual, deep) {\n      var name, result, s, ss, substate, _ref3, _ref4;\n      result = [];\n      if (virtual && (s = this.root._current) && s.attributes & VIRTUAL && this.isSuperstateOf(s)) {\n        while (s && s !== this && s.attributes & VIRTUAL && (ss = s.superstate)) {\n          if (deep || ss === this) {\n            result.unshift(s);\n          }\n          s = ss;\n        }\n      }\n      _ref4 = (_ref3 = this._) != null ? _ref3.substates : void 0;\n      for (name in _ref4) {\n        if (!__hasProp.call(_ref4, name)) continue;\n        substate = _ref4[name];\n        result.push(substate);\n        if (deep) {\n          result = result.concat(substate.substates(void 0, true));\n        }\n      }\n      return result;\n    };\n    State.prototype.descendants = function (virtual) {\n      return this.substates(virtual, true);\n    };\n    State.prototype.addSubstate = function (name, expression) {\n      var attributes, substate, substates, _base;\n      attributes = this.attributes;\n      if (!(attributes & INCIPIENT)) {\n        if (attributes & FINITE) {\n          return;\n        }\n        if (!(attributes & MUTABLE)) {\n          return;\n        }\n      }\n      if (attributes & VIRTUAL) {\n        this.realize();\n      }\n      substates = (_base = this._).substates || (_base.substates = {});\n      if (substate = substates[name]) {\n        substate.destroy();\n      }\n      substate = expression instanceof State ? expression.superstate === this ? expression.realize() : void 0 : new State(this, name, expression);\n      if (!substate) {\n        return null;\n      }\n      return substates[name] = substate;\n    };\n    State.prototype.removeSubstate = function (name) {\n      var attributes, substate, substates, transition, _ref3;\n      attributes = this.attributes;\n      if (attributes & VIRTUAL) {\n        return;\n      }\n      substates = (_ref3 = this._) != null ? _ref3.substates : void 0;\n      if (!(substate = substates != null ? substates[name] : void 0)) {\n        return;\n      }\n      if (!(attributes & MUTABLE || (substate != null ? substate.attributes : void 0) & DESTROYED)) {\n        return;\n      }\n      if ((transition = this.root._transition) && (substate.isSuperstateOf(transition) || substate === transition.origin || substate === transition.target)) {\n        return false;\n      }\n      if (this.root._current.isIn(substate)) {\n        this.change(this, {\n          forced: true\n        });\n      }\n      delete substates[name];\n      return substate;\n    };\n    State.prototype.derivation = function (byName) {\n      var results, s, ss;\n      results = [];\n      ss = this;\n      while ((s = ss) && (ss = s.superstate)) {\n        results.push(byName ? s.name || '' : s);\n      }\n      return results.reverse();\n    };\n    State.prototype.path = function () {\n      return this.derivation(true).join('.');\n    };\n    State.prototype.toString = State.prototype.path;\n    State.prototype.depth = function () {\n      var n, s;\n      n = 0;\n      s = this;\n      while (s = s.superstate) {\n        n += 1;\n      }\n      return n;\n    };\n    State.prototype.common = function (other) {\n      var s;\n      if (!(other instanceof State)) {\n        other = this.query(other);\n      }\n      if (this.depth() > other.depth()) {\n        s = other;\n        other = this;\n      } else {\n        s = this;\n      }\n      while (s) {\n        if (s === other || s.isSuperstateOf(other)) {\n          return s;\n        }\n        s = s.superstate;\n      }\n      return null;\n    };\n    State.prototype.is = function (other) {\n      if (!(other instanceof State)) {\n        other = this.query(other);\n      }\n      return other === this;\n    };\n    State.prototype.isIn = function (other) {\n      if (!(other instanceof State)) {\n        other = this.query(other);\n      }\n      return other === this || other.isSuperstateOf(this);\n    };\n    State.prototype.hasSubstate = function (other) {\n      if (!(other instanceof State)) {\n        other = this.query(other);\n      }\n      return other === this || this.isSuperstateOf(other);\n    };\n    State.prototype.isSuperstateOf = function (other) {\n      var superstate;\n      if (!(other instanceof State)) {\n        other = this.query(other);\n      }\n      if (superstate = other.superstate) {\n        return this === superstate || this.isSuperstateOf(superstate);\n      } else {\n        return false;\n      }\n    };\n    State.prototype.defaultSubstate = function (via, first) {\n      var protostate, s, substates, _i, _len, _ref3;\n      if (via == null) {\n        via = VIA_PROTO;\n      }\n      _ref3 = substates = this.substates();\n      for (_i = 0, _len = _ref3.length; _i < _len; _i++) {\n        s = _ref3[_i];\n        if (s.attributes & DEFAULT) {\n          return s;\n        }\n      }\n      first || substates.length && (first = substates[0]);\n      if (via & VIA_PROTO && (protostate = this.protostate)) {\n        return protostate.defaultSubstate(VIA_PROTO);\n      }\n      return first;\n    };\n    State.prototype.initialSubstate = function (via) {\n      var i, protostate, queue, s, subject, substates, _i, _len, _ref3;\n      if (via == null) {\n        via = VIA_PROTO;\n      }\n      i = 0;\n      queue = [this];\n      while (subject = queue[i++]) {\n        _ref3 = substates = subject.substates(void 0, !!VIA_PROTO);\n        for (_i = 0, _len = _ref3.length; _i < _len; _i++) {\n          s = _ref3[_i];\n          if (s.attributes & INITIAL) {\n            return s.initialSubstate(VIA_NONE) || s;\n          }\n          queue.push(s);\n        }\n      }\n      if (via & VIA_PROTO && (protostate = this.protostate)) {\n        return protostate.initialSubstate(VIA_PROTO);\n      }\n    };\n    State.prototype.getProtostate = function () {\n      var accessorName, getPrototypeOf, owner, path, protostate, prototype, root;\n      getPrototypeOf = O.getPrototypeOf;\n      owner = this.owner, root = this.root;\n      accessorName = root.accessorName;\n      path = this.path();\n      prototype = getPrototypeOf(owner);\n      while (prototype) {\n        if (protostate = typeof prototype[accessorName] === \"function\" ? prototype[accessorName](path, VIA_NONE) : void 0) {\n          return protostate;\n        }\n        prototype = getPrototypeOf(prototype);\n      }\n      return null;\n    };\n    State.prototype.isProtostateOf = function (other) {\n      var protostate;\n      if (!(other instanceof State)) {\n        other = this.query(other);\n      }\n      if (protostate = other.protostate) {\n        return this === protostate || this.isProtostateOf(protostate);\n      } else {\n        return false;\n      }\n    };\n    State.prototype.query = function (selector, against, via, toBeSkipped) {\n      var cursor, i, l, name, next, parts, queue, result, subject, substate, _i, _len, _ref3, _ref4, _ref5;\n      if (typeof against === 'number') {\n        toBeSkipped = via;\n        via = against;\n        against = void 0;\n      }\n      if (via == null) {\n        via = VIA_ALL;\n      }\n      if (selector == null) {\n        if (against === void 0) {\n          return null;\n        } else {\n          return false;\n        }\n      }\n      if (selector === '.') {\n        if (against === void 0) {\n          return this;\n        } else {\n          return against === this;\n        }\n      }\n      if (selector === '') {\n        if (against === void 0) {\n          return this.root;\n        } else {\n          return against === this.root;\n        }\n      }\n      if (against && against === this.root && /^\\*+$/.test(selector)) {\n        return true;\n      }\n      if (/^\\.*\\**$/.test(selector)) {\n        via &= ~(VIA_SUB | VIA_SUPER);\n      }\n      if (selector.charAt(0) !== '.') {\n        return this.root.query('.' + selector, against, VIA_SUB | VIA_PROTO);\n      }\n      selector = selector.replace(/^(\\.+)\\.$/, '$1');\n      parts = selector.split('.');\n      i = 0;\n      l = parts.length;\n      cursor = this;\n      while (cursor) {\n        i += 1;\n        if (i >= l) {\n          return against ? against === cursor : cursor;\n        }\n        name = parts[i];\n        if (name === '*') {\n          if (!against) {\n            return cursor.substates();\n          }\n          if (cursor === against.superstate) {\n            return true;\n          }\n          break;\n        }\n        if (name === '**') {\n          if (!against) {\n            return cursor.substates(void 0, true);\n          }\n          if (cursor.isSuperstateOf(against)) {\n            return true;\n          }\n          break;\n        }\n        if (name === '') {\n          cursor = cursor.superstate;\n        } else if (next = cursor.substate(name)) {\n          cursor = next;\n        } else {\n          break;\n        }\n      }\n      if (via & VIA_SUB) {\n        i = 0;\n        queue = [this];\n        while (subject = queue[i++]) {\n          _ref3 = subject.substates(true);\n          for (_i = 0, _len = _ref3.length; _i < _len; _i++) {\n            substate = _ref3[_i];\n            if (substate === toBeSkipped) {\n              continue;\n            }\n            result = substate.query(selector, against, VIA_NONE);\n            if (result) {\n              return result;\n            }\n            queue.push(substate);\n          }\n        }\n      }\n      if (via & VIA_SUPER) {\n        if (result = (_ref4 = this.superstate) != null ? _ref4.query(selector, against, via & VIA_SUB | VIA_SUPER, via & VIA_SUB ? this : void 0) : void 0) {\n          return result;\n        }\n      }\n      if (via & VIA_PROTO) {\n        if (result = (_ref5 = this.protostate) != null ? _ref5.query(selector, against, via) : void 0) {\n          return result;\n        }\n      }\n      if (against) {\n        return false;\n      } else {\n        return null;\n      }\n    };\n    State.prototype.$ = function () {\n      var args, expr, match, method;\n      expr = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (typeof expr === 'function') {\n        if (expr = expr()) {\n          return this.change.apply(this, [expr].concat(args));\n        }\n      } else if (typeof expr === 'string' && (match = expr.match(rxTransitionArrow)) && (method = transitionArrowMethods[match[1]])) {\n        if (args.length) {\n          return this[method].apply(this, [match[2]].concat(args));\n        } else {\n          return this[method](match[2]);\n        }\n      }\n    };\n    State.prototype.current = function () {\n      return this.root._current;\n    };\n    State.prototype.isCurrent = function () {\n      return this === this.current();\n    };\n    State.prototype.isActive = function () {\n      var current;\n      return this === (current = this.current()) || this.isSuperstateOf(current);\n    };\n    State.prototype.change = function (target, options) {\n      var root;\n      return (root = this.root).change.apply(root, arguments);\n    };\n    State.prototype.go = State.prototype.change;\n    State.prototype.be = State.prototype.change;\n    State.prototype.data = function (via, out) {\n      var attributes, mutation, relative, residue, _base, _i, _ref3, _ref4, _ref5, _ref6;\n      if (via == null) {\n        via = VIA_ALL;\n      }\n      if (via !== via << 0) {\n        mutation = via;\n      }\n      if (mutation) {\n        attributes = this.attributes;\n        if (attributes & INCIPIENT_OR_MUTABLE && !isEmpty(mutation)) {\n          if (attributes & VIRTUAL) {\n            return this.realize().data(mutation);\n          }\n          residue = delta((_base = this._).data != null ? (_base = this._).data : _base.data = {}, mutation);\n          if (~attributes & ATOMIC && residue && !isEmpty(residue)) {\n            this.emit('mutate', [mutation, residue], VIA_PROTO);\n          }\n        }\n        return this;\n      } else {\n        if (out == null) {\n          out = {};\n        }\n        _ref4 = (_ref3 = this.order) != null ? _ref3 : this.linearize();\n        for (_i = _ref4.length - 1; _i >= 0; _i += -1) {\n          relative = _ref4[_i];\n          if (!(via & VIA_SUPER || relative === this)) {\n            continue;\n          }\n          edit('deep all', out, via & VIA_PROTO ? (_ref5 = relative.protostate) != null ? _ref5.data(VIA_PROTO, out) : void 0 : void 0, (_ref6 = relative._) != null ? _ref6.data : void 0);\n        }\n        return out;\n      }\n    };\n    State.prototype.has = function (key, via) {\n      var data, relative, s, viaProto, viaSuper, _i, _len, _ref3, _ref4, _ref5;\n      if (via == null) {\n        via = VIA_ALL;\n      }\n      viaSuper = via & VIA_SUPER;\n      viaProto = via & VIA_PROTO;\n      _ref4 = (_ref3 = this.order) != null ? _ref3 : this.linearize();\n      for (_i = 0, _len = _ref4.length; _i < _len; _i++) {\n        relative = _ref4[_i];\n        s = relative;\n        while (s != null) {\n          if ((data = (_ref5 = s._) != null ? _ref5.data : void 0) != null && hasOwn.call(data, key)) {\n            return true;\n          }\n          if (viaProto) {\n            s = s.protostate;\n          } else {\n            break;\n          }\n          if (viaSuper) {\n            continue;\n          }\n        }\n      }\n      return false;\n    };\n    State.prototype.get = function (key, via) {\n      var data, relative, s, viaProto, viaSuper, _i, _len, _ref3, _ref4, _ref5;\n      if (via == null) {\n        via = VIA_ALL;\n      }\n      viaSuper = via & VIA_SUPER;\n      viaProto = via & VIA_PROTO;\n      _ref4 = (_ref3 = this.order) != null ? _ref3 : this.linearize();\n      for (_i = 0, _len = _ref4.length; _i < _len; _i++) {\n        relative = _ref4[_i];\n        s = relative;\n        while (s != null) {\n          if ((data = (_ref5 = s._) != null ? _ref5.data : void 0) != null && hasOwn.call(data, key)) {\n            return data[key];\n          }\n          if (viaProto) {\n            s = s.protostate;\n          } else {\n            break;\n          }\n        }\n        if (viaSuper) {\n          continue;\n        }\n      }\n    };\n    State.prototype[\"let\"] = function (key, value) {\n      var attributes, data, displaced, mutation, residue, _base;\n      attributes = this.attributes;\n      if (!(attributes & INCIPIENT_OR_MUTABLE)) {\n        return;\n      }\n      if (attributes & VIRTUAL) {\n        this.realize();\n      }\n      data = (_base = this._).data || (_base.data = {});\n      if (value !== (displaced = lookup(data, key))) {\n        assign(data, key, value);\n        assign((mutation = {}).data = {}, key, value);\n        assign((residue = {}).data = {}, key, displaced);\n        this.emit('mutate', [mutation, residue], VIA_PROTO);\n      }\n      return value;\n    };\n    State.prototype.set = function (key, value) {\n      var attributes, data, relative, _i, _len, _ref3, _ref4, _ref5;\n      attributes = this.attributes;\n      if (!(attributes & INCIPIENT_OR_MUTABLE)) {\n        return;\n      }\n      if (attributes & VIRTUAL) {\n        this.realize();\n      }\n      _ref4 = (_ref3 = this.order) != null ? _ref3 : this.linearize();\n      for (_i = 0, _len = _ref4.length; _i < _len; _i++) {\n        relative = _ref4[_i];\n        if ((data = (_ref5 = relative._) != null ? _ref5.data : void 0) != null && hasOwn.call(data, key)) {\n          if (relative.attributes & MUTABLE) {\n            return relative[\"let\"](key, value);\n          }\n          break;\n        }\n      }\n      return this[\"let\"](key, value);\n    };\n    State.prototype[\"delete\"] = function (key) {\n      if (!(this.attributes & MUTABLE)) {\n        return;\n      }\n      return NIL === this[\"let\"](key, NIL);\n    };\n    State.prototype.method = function (methodName, via, out, returnBoxed) {\n      var attributes, context, inherited, method, realized, record, relative, table, viaProto, _base, _i, _len, _ref10, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;\n      if (via == null) {\n        via = VIA_ALL;\n      }\n      attributes = this.attributes;\n      realized = ~attributes & VIRTUAL;\n      while (true) {\n        if (realized) {\n          if (method = (_ref3 = this._) != null ? (_ref4 = _ref3.methods) != null ? _ref4[methodName] : void 0 : void 0) {\n            context = this;\n            break;\n          }\n          if (record = (_ref5 = this._) != null ? (_ref6 = _ref5.__dispatch_table__) != null ? _ref6[methodName] : void 0 : void 0) {\n            method = record[0], context = record[1];\n            if (method != null) {\n              break;\n            }\n          }\n        }\n        if (viaProto = via & VIA_PROTO) {\n          if (method = (_ref7 = this.protostate) != null ? _ref7.method(methodName, VIA_PROTO, out, true) : void 0) {\n            context = this;\n            inherited = true;\n            break;\n          }\n        }\n        if (via & VIA_SUPER) {\n          _ref9 = (_ref8 = this.order) != null ? _ref8 : this.linearize();\n          for (_i = 0, _len = _ref9.length; _i < _len; _i++) {\n            relative = _ref9[_i];\n            if (relative !== this) {\n              if (method = relative.method(methodName, viaProto, out, true)) {\n                context = (_ref10 = out != null ? out.context : void 0) != null ? _ref10 : null;\n                inherited = true;\n                break;\n              }\n            }\n          }\n          if (method != null) {\n            break;\n          }\n        }\n        context = null;\n        break;\n      }\n      if (method != null) {\n        if (typeof method === 'function') {\n          context = null;\n        }\n        if (realized && inherited && useDispatchTables) {\n          table = (_base = this._).__dispatch_table__ != null ? (_base = this._).__dispatch_table__ : _base.__dispatch_table__ = {};\n          table[methodName] = [method, context];\n        }\n        if (!returnBoxed) {\n          if (method.type === 'state-bound-function') {\n            method = method.fn;\n          }\n        }\n      }\n      if (out != null) {\n        out.method = method;\n        out.context = context;\n      }\n      return method;\n    };\n    State.prototype.methodNames = function () {\n      var methods, _ref3;\n      if (methods = (_ref3 = this._) != null ? _ref3.methods : void 0) {\n        return keys(methods);\n      }\n    };\n    State.prototype.addMethod = function (methodName, fn) {\n      var methods, owner, ownerMethod, root, _ref3, _ref4, _ref5;\n      if (!(this.attributes & INCIPIENT_OR_MUTABLE)) {\n        return;\n      }\n      if (typeof fn === 'object' && fn.type === 'state-fixed-function') {\n        fn = fn.fn(this, this.protostate);\n      }\n      if (!(typeof fn === 'function' || (fn != null ? fn.type : void 0) === 'state-bound-function')) {\n        throw new TypeError(\"Must supply a plain, bound, or fixed function\");\n      }\n      owner = this.owner;\n      if (!((_ref3 = ownerMethod = owner[methodName]) != null ? _ref3.isDispatcher : void 0)) {\n        root = this.root;\n        owner[methodName] = createDispatcher(root.accessorName, methodName, ownerMethod);\n        if (ownerMethod != null && this !== root) {\n          methods = (_ref4 = root._) != null ? _ref4.methods || (_ref4.methods = {}) : void 0;\n          methods[methodName] = ownerMethod;\n        }\n      }\n      methods = (_ref5 = this._) != null ? _ref5.methods || (_ref5.methods = {}) : void 0;\n      return methods[methodName] = fn;\n    };\n    State.prototype.removeMethod = function (methodName) {\n      var fn, methods, _ref3;\n      if (!(this.attributes & MUTABLE && (methods = (_ref3 = this._) != null ? _ref3.methods : void 0) && (fn = methods[methodName]))) {\n        return;\n      }\n      delete methods[methodName];\n      return fn;\n    };\n    State.prototype.hasMethod = function (methodName) {\n      var method;\n      return method = this.method(methodName);\n    };\n    State.prototype.hasOwnMethod = function (methodName) {\n      return !!this.method(methodName, VIA_NONE);\n    };\n    State.prototype.apply = function (methodName, args) {\n      var context, method, out, record, _ref3, _ref4;\n      if (record = (_ref3 = this._) != null ? (_ref4 = _ref3.__dispatch_table__) != null ? _ref4[methodName] : void 0 : void 0) {\n        method = record[0], context = record[1];\n        if ((method != null ? method.type : void 0) === 'state-bound-function') {\n          method = method.fn;\n        }\n      }\n      if (method == null) {\n        if (method = this.method(methodName, VIA_ALL, out = {})) {\n          context = out.context;\n        } else {\n          this.emit('noSuchMethod', [methodName, args]);\n          this.emit('noSuchMethod:' + methodName, args);\n          return;\n        }\n      }\n      return method.apply(context || this.owner, args);\n    };\n    State.prototype.call = function () {\n      var args, methodName;\n      methodName = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      return this.apply(methodName, args);\n    };\n    State.prototype.event = function (eventType, id) {\n      var emitter, _ref3, _ref4;\n      if (!(emitter = (_ref3 = this._) != null ? (_ref4 = _ref3.events) != null ? _ref4[eventType] : void 0 : void 0)) {\n        return;\n      }\n      if (id === void 0) {\n        return emitter.length;\n      }\n      if (typeof id === 'function') {\n        id = emitter.key(id);\n      }\n      return emitter.get(id);\n    };\n    State.prototype.addEvent = function (eventType, fn, context) {\n      var events, _base;\n      if (this.attributes & VIRTUAL) {\n        this.realize();\n      }\n      events = (_base = this._).events || (_base.events = {});\n      if (!hasOwn.call(events, eventType)) {\n        events[eventType] = new StateEventEmitter(this);\n      }\n      if (fn.type === 'state-fixed-function') {\n        fn = fn.fn(this, this.protostate);\n      }\n      return events[eventType].add(fn, context);\n    };\n    State.prototype.on = State.prototype.addEvent;\n    State.prototype.removeEvent = function (eventType, id) {\n      var _ref3, _ref4;\n      return (_ref3 = this._) != null ? (_ref4 = _ref3.events) != null ? _ref4[eventType].remove(id) : void 0 : void 0;\n    };\n    State.prototype.off = State.prototype.removeEvent;\n    State.prototype.emit = function (eventType, args, context, via) {\n      var relative, _i, _len, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8;\n      if (via == null) {\n        via = VIA_ALL;\n      }\n      if (typeof eventType !== 'string') {\n        return;\n      }\n      if (typeof args === 'number') {\n        via = context;\n        context = args;\n        args = void 0;\n      }\n      if (typeof context === 'number') {\n        via = context;\n        context = void 0;\n      }\n      if (args != null && !isArray(args)) {\n        args = [args];\n      }\n      if ((_ref3 = this._) != null) {\n        if ((_ref4 = _ref3.events) != null) {\n          if ((_ref5 = _ref4[eventType]) != null) {\n            _ref5.emit(args, context != null ? context : this);\n          }\n        }\n      }\n      if (via & VIA_PROTO) {\n        if ((_ref6 = this.protostate) != null) {\n          _ref6.emit(eventType, args, context != null ? context : this, VIA_PROTO);\n        }\n      }\n      if (via & VIA_SUPER) {\n        _ref8 = (_ref7 = this.order) != null ? _ref7 : this.linearize();\n        for (_i = 0, _len = _ref8.length; _i < _len; _i++) {\n          relative = _ref8[_i];\n          if (relative !== this) {\n            relative.emit(eventType, args, context != null ? context : relative);\n          }\n        }\n      }\n    };\n    State.prototype.trigger = State.prototype.emit;\n    State.prototype.guard = function (guardType) {\n      var guard, _ref3, _ref4, _ref5;\n      if (guard = (_ref3 = this._) != null ? (_ref4 = _ref3.guards) != null ? _ref4[guardType] : void 0 : void 0) {\n        return clone(guard);\n      } else {\n        return ((_ref5 = this.protostate) != null ? _ref5.guard(guardType) : void 0) || void 0;\n      }\n    };\n    State.prototype.addGuard = function (guardType, guard) {\n      var attributes, guards, _base;\n      attributes = this.attributes;\n      if (!(attributes & INCIPIENT_OR_MUTABLE)) {\n        return;\n      }\n      if (attributes & VIRTUAL) {\n        this.realize();\n      }\n      guards = (_base = this._).guards || (_base.guards = {});\n      return edit(guards[guardType] || (guards[guardType] = {}), guard);\n    };\n    State.prototype.removeGuard = function () {\n      var args, attributes, entry, guard, guardType, guards, key, _i, _len, _ref3;\n      guardType = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      attributes = this.attributes;\n      if (attributes & VIRTUAL) {\n        return;\n      }\n      if (!(attributes & MUTABLE && (guards = this._.guards))) {\n        return;\n      }\n      if (!(guard = guards[guardType])) {\n        return null;\n      }\n      if (!args.length) {\n        return delete guards[guardType] ? guard : void 0;\n      }\n      _ref3 = flatten(args);\n      for (_i = 0, _len = _ref3.length; _i < _len; _i++) {\n        key = _ref3[_i];\n        if (!(typeof key === 'string')) {\n          continue;\n        }\n        entry = guard[key];\n        if (delete guard[key]) {\n          return entry;\n        }\n      }\n    };\n    State.prototype.transition = function (name) {\n      var _ref3, _ref4;\n      return (_ref3 = this._) != null ? (_ref4 = _ref3.transitions) != null ? _ref4[name] : void 0 : void 0;\n    };\n    State.prototype.transitions = function () {\n      var _ref3;\n      return clone((_ref3 = this._) != null ? _ref3.transitions : void 0);\n    };\n    State.prototype.addTransition = function (name, expression) {\n      var attributes, transitions, _base;\n      attributes = this.attributes;\n      if (!(attributes & INCIPIENT_OR_MUTABLE)) {\n        return;\n      }\n      if (attributes & VIRTUAL) {\n        this.realize();\n      }\n      if (!(expression instanceof TransitionExpression)) {\n        expression = new TransitionExpression(expression);\n      }\n      transitions = (_base = this._).transitions || (_base.transitions = {});\n      return transitions[name] = expression;\n    };\n    State.prototype.removeTransition = function (name) {\n      var attributes, transition, transitions;\n      attributes = this.attributes;\n      if (attributes & VIRTUAL) {\n        return;\n      }\n      if (!(attributes & MUTABLE && (transitions = this._.transitions))) {\n        return;\n      }\n      transition = transitions[name];\n      if (transition) {\n        delete transitions[name];\n      }\n      return transition;\n    };\n    return State;\n  }();\n  State.prototype.Metaobject = require('./state-metaobject');\n  State.prototype.Expression = StateExpression = require('./state-expression');\n  StateEventEmitter = require('./state-event-emitter');\n  TransitionExpression = require('./transition-expression');\n}).call(this);","map":{"version":3,"names":["O","STATE_ATTRIBUTES","State","StateEventEmitter","StateExpression","TRAVERSAL_FLAGS","TransitionExpression","state","__hasProp","hasOwnProperty","__indexOf","indexOf","item","i","l","length","__slice","slice","require","module","exports","ABSTRACT","ABSTRACT_OR_CONCRETE","ATOMIC","CONCLUSIVE","CONCRETE","CONCURRENT","DEFAULT","DESTROYED","FINAL","FINITE","HISTORY","IMMUTABLE","INCIPIENT","INCIPIENT_OR_MUTABLE","INCIPIENT_OR_VIRTUAL","INITIAL","MUTABLE","MUTABLE_OR_FINITE","NIL","NORMAL","PARASTATIC","PROTO_HERITABLE_ATTRIBUTES","REFLECTIVE","RETAINED","SHALLOW","STATIC","VIA_ALL","VIA_NONE","VIA_PROTO","VIA_SUB","VIA_SUPER","VIRTUAL","assign","clone","createDispatcher","delta","edit","env","flatten","has","hasOwn","isArray","isEmpty","lookup","memoizeProtostates","useDispatchTables","_ref","_ref1","_ref2","options","prototype","Metaobject","Expression","base","name","expression","attributes","owner","protoAttr","protostate","root","superAttr","superstate","getProtostate","order","initialize","debug","path","decodeAttributes","toString","accessorName","methodName","original","dispatcher","apply","arguments","isDispatcher","realize","emit","key","method","parastates","ss","substates","_base","_ref3","_","destroy","join","TypeError","split","mutate","call","addMethod","linearize","virtualize","inheritor","derivation","expr","real","s","isPrototypeOf","substate","getParastateDeclarations","merge","head","ps","tail","_ref4","concat","out","lists","bad","headList","index","list","otherList","remainingLists","_i","_j","_k","_len","_len1","_len2","push","shift","pop","via","parastate","parent","parents","paths","own","ReferenceError","express","cloneCategory","cloneEvents","cloneSubstates","object","value","events","emitter","type","items","typed","data","methods","guards","states","transitions","diff","editEvent","isPlainObject","_results","remove","set","after","before","element","event","incipient","mutable","residue","stateExpr","transitionExpr","_base1","_ref5","_ref6","_ref7","removeMethod","empty","addEvent","removeSubstate","addSubstate","addTransition","ownerMethod","transition","_transition","abort","origin","isIn","target","isVirtual","isMutable","isFinite","isStatic","isImmutable","isInitial","isConclusive","isFinal","isAbstract","isConcrete","isDefault","isReflective","hasHistory","isRetained","isShallow","isConcurrent","_current","virtual","deep","result","isSuperstateOf","unshift","descendants","change","forced","byName","results","reverse","depth","n","common","other","query","is","hasSubstate","defaultSubstate","first","initialSubstate","queue","subject","getPrototypeOf","isProtostateOf","selector","against","toBeSkipped","cursor","next","parts","test","charAt","replace","$","args","match","rxTransitionArrow","transitionArrowMethods","current","isCurrent","isActive","go","be","mutation","relative","viaProto","viaSuper","get","displaced","returnBoxed","context","inherited","realized","record","table","_ref10","_ref8","_ref9","__dispatch_table__","fn","methodNames","keys","hasMethod","hasOwnMethod","eventType","id","add","on","removeEvent","off","trigger","guard","guardType","addGuard","removeGuard","entry","removeTransition"],"sources":["C:/Users/Admin/Documents/GitHub/unipos-project/webapp/node_modules/state/lib/state.js"],"sourcesContent":["// Generated by CoffeeScript 1.6.3\n(function() {\n  var O, STATE_ATTRIBUTES, State, StateEventEmitter, StateExpression, TRAVERSAL_FLAGS, TransitionExpression, state,\n    __hasProp = {}.hasOwnProperty,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n    __slice = [].slice;\n\n  O = require('omicron');\n\n  state = require('./state-function');\n\n  StateEventEmitter = null;\n\n  StateExpression = null;\n\n  TransitionExpression = null;\n\n  STATE_ATTRIBUTES = state.STATE_ATTRIBUTES, TRAVERSAL_FLAGS = state.TRAVERSAL_FLAGS;\n\n  module.exports = State = (function() {\n    var ABSTRACT, ABSTRACT_OR_CONCRETE, ATOMIC, CONCLUSIVE, CONCRETE, CONCURRENT, DEFAULT, DESTROYED, FINAL, FINITE, HISTORY, IMMUTABLE, INCIPIENT, INCIPIENT_OR_MUTABLE, INCIPIENT_OR_VIRTUAL, INITIAL, MUTABLE, MUTABLE_OR_FINITE, NIL, NORMAL, PARASTATIC, PROTO_HERITABLE_ATTRIBUTES, REFLECTIVE, RETAINED, SHALLOW, STATIC, VIA_ALL, VIA_NONE, VIA_PROTO, VIA_SUB, VIA_SUPER, VIRTUAL, assign, clone, createDispatcher, delta, edit, env, flatten, has, hasOwn, isArray, isEmpty, lookup, memoizeProtostates, useDispatchTables, _ref, _ref1, _ref2;\n\n    _ref = state.options, memoizeProtostates = _ref.memoizeProtostates, useDispatchTables = _ref.useDispatchTables;\n\n    env = O.env, NIL = O.NIL, isArray = O.isArray, isEmpty = O.isEmpty, has = O.has, hasOwn = O.hasOwn;\n\n    assign = O.assign, edit = O.edit, delta = O.delta, clone = O.clone, lookup = O.lookup, flatten = O.flatten;\n\n    _ref1 = assign(State, STATE_ATTRIBUTES), INCIPIENT = _ref1.INCIPIENT, ATOMIC = _ref1.ATOMIC, DESTROYED = _ref1.DESTROYED, VIRTUAL = _ref1.VIRTUAL, PARASTATIC = _ref1.PARASTATIC, MUTABLE = _ref1.MUTABLE, FINITE = _ref1.FINITE, STATIC = _ref1.STATIC, IMMUTABLE = _ref1.IMMUTABLE, INITIAL = _ref1.INITIAL, CONCLUSIVE = _ref1.CONCLUSIVE, FINAL = _ref1.FINAL, ABSTRACT = _ref1.ABSTRACT, CONCRETE = _ref1.CONCRETE, DEFAULT = _ref1.DEFAULT, REFLECTIVE = _ref1.REFLECTIVE, HISTORY = _ref1.HISTORY, RETAINED = _ref1.RETAINED, SHALLOW = _ref1.SHALLOW, CONCURRENT = _ref1.CONCURRENT, NORMAL = _ref1.NORMAL;\n\n    _ref2 = assign(State, TRAVERSAL_FLAGS), VIA_NONE = _ref2.VIA_NONE, VIA_SUB = _ref2.VIA_SUB, VIA_SUPER = _ref2.VIA_SUPER, VIA_PROTO = _ref2.VIA_PROTO, VIA_ALL = _ref2.VIA_ALL;\n\n    MUTABLE_OR_FINITE = MUTABLE | FINITE;\n\n    ABSTRACT_OR_CONCRETE = ABSTRACT | CONCRETE;\n\n    INCIPIENT_OR_VIRTUAL = INCIPIENT | VIRTUAL;\n\n    INCIPIENT_OR_MUTABLE = INCIPIENT | MUTABLE;\n\n    PROTO_HERITABLE_ATTRIBUTES = PARASTATIC | MUTABLE | FINITE | STATIC | IMMUTABLE | INITIAL | CONCLUSIVE | FINAL | ABSTRACT | CONCRETE | DEFAULT | REFLECTIVE | HISTORY | RETAINED | SHALLOW | CONCURRENT | NORMAL;\n\n    State.prototype.Metaobject = null;\n\n    State.prototype.Expression = null;\n\n    function State(base, name, expression) {\n      var attributes, owner, protoAttr, protostate, root, superAttr, superstate;\n      this.name = name;\n      if (base instanceof State) {\n        superstate = base;\n        root = superstate.root;\n        owner = root.owner;\n      } else {\n        superstate = null;\n        root = this;\n        owner = base;\n      }\n      this.owner = owner;\n      this.root = root;\n      this.superstate = superstate;\n      this.protostate = protostate = this.getProtostate() || null;\n      this.order = null;\n      attributes = (expression != null ? expression.attributes : void 0) || NORMAL;\n      if (superstate != null) {\n        superAttr = superstate.attributes;\n        attributes |= superAttr & MUTABLE_OR_FINITE;\n      }\n      if (protostate != null) {\n        protoAttr = protostate.attributes & PROTO_HERITABLE_ATTRIBUTES;\n        if (attributes & CONCRETE) {\n          attributes &= ~ABSTRACT;\n        }\n        if (attributes & ABSTRACT_OR_CONCRETE) {\n          protoAttr &= ~ABSTRACT_OR_CONCRETE;\n        }\n        attributes |= protoAttr;\n      }\n      if (~attributes & ABSTRACT) {\n        attributes |= CONCRETE;\n      }\n      attributes |= (superAttr | protoAttr) & IMMUTABLE;\n      if (attributes & IMMUTABLE) {\n        attributes = attributes & ~MUTABLE | FINITE;\n      }\n      this.attributes = attributes;\n      if (!(attributes & VIRTUAL)) {\n        this.initialize(expression);\n      }\n      if (env.debug) {\n        this[' <path>'] = this.path();\n        this['<attributes>'] = StateExpression.decodeAttributes(attributes);\n      }\n    }\n\n    createDispatcher = (function() {\n      var toString;\n      toString = function() {\n        return \"[dispatcher]\";\n      };\n      return function(accessorName, methodName, original) {\n        var dispatcher;\n        dispatcher = function() {\n          return this[accessorName]().apply(methodName, arguments);\n        };\n        dispatcher.isDispatcher = true;\n        if (env.debug) {\n          dispatcher.toString = toString;\n        }\n        if (original) {\n          dispatcher.original = original;\n        }\n        return dispatcher;\n      };\n    })();\n\n    State.prototype.initialize = function(expression) {\n      var attributes;\n      attributes = this.attributes;\n      if (attributes & VIRTUAL) {\n        return;\n      }\n      this.attributes |= INCIPIENT;\n      this.realize(expression);\n      this.attributes &= ~INCIPIENT;\n      this.emit('construct', expression, VIA_PROTO);\n      return this;\n    };\n\n    State.prototype.realize = function(expression) {\n      var attributes, key, method, name, parastates, ss, substates, _base, _ref3;\n      attributes = this.attributes, name = this.name;\n      if (!(attributes & INCIPIENT_OR_VIRTUAL)) {\n        return this;\n      }\n      if (attributes & VIRTUAL) {\n        if (ss = this.superstate) {\n          if (ss.attributes & VIRTUAL) {\n            ss.realize();\n          }\n          substates = (_base = ss._).substates != null ? (_base = ss._).substates : _base.substates = {};\n          if (substates[name] != null) {\n            substates[name].destroy();\n          }\n          substates[name] = this;\n        }\n        this.attributes &= ~VIRTUAL;\n      }\n      if (this._ == null) {\n        this._ = new this.Metaobject;\n      }\n      if (parastates = expression != null ? expression.parastates : void 0) {\n        if (isArray(parastates)) {\n          parastates = parastates.join(',');\n        }\n        if (typeof parastates !== 'string') {\n          throw TypeError;\n        }\n        parastates = parastates.split(/\\s*,\\s*/);\n        if (parastates.length) {\n          this._.parastates = parastates;\n          this.attributes |= PARASTATIC;\n        }\n      }\n      if (expression != null) {\n        this.mutate(expression);\n      }\n      if (this === this.root) {\n        _ref3 = this.owner;\n        for (key in _ref3) {\n          if (!__hasProp.call(_ref3, key)) continue;\n          method = _ref3[key];\n          if (key !== 'constructor' && typeof method === 'function' && !method.isDispatcher && this.method(key, VIA_PROTO)) {\n            this.addMethod(key, method);\n          }\n        }\n      }\n      if (this === this.root || ~attributes & INCIPIENT) {\n        this.linearize(VIA_SUB);\n      }\n      return this;\n    };\n\n    State.prototype.virtualize = function(inheritor) {\n      var derivation, expr, i, name, real, s;\n      if (!(inheritor instanceof State && this.owner.isPrototypeOf(inheritor.owner))) {\n        return null;\n      }\n      if (!(derivation = this.derivation(true)).length) {\n        return null;\n      }\n      i = 0;\n      s = inheritor.root;\n      while (name = derivation[i++]) {\n        if (!(real = s.substate(name, VIA_NONE))) {\n          break;\n        }\n        s = real;\n      }\n      expr = {\n        attributes: VIRTUAL\n      };\n      while (name) {\n        s = new State(s, name, expr);\n        name = derivation[i++];\n      }\n      return s;\n    };\n\n    State.prototype.linearize = (function() {\n      var getParastateDeclarations, linearize, merge;\n      getParastateDeclarations = function() {\n        var head, ps, tail, _ref3, _ref4;\n        head = (_ref3 = this._) != null ? _ref3.parastates : void 0;\n        if (ps = this.protostate) {\n          tail = getParastateDeclarations.call(ps);\n        }\n        if (tail != null) {\n          return (_ref4 = head != null ? head.concat(tail) : void 0) != null ? _ref4 : tail;\n        } else {\n          return head;\n        }\n      };\n      merge = function(out, lists) {\n        var bad, head, headList, i, index, item, list, otherList, remainingLists, _i, _j, _k, _len, _len1, _len2;\n        if (!lists.length) {\n          return out;\n        }\n        for (index = _i = 0, _len = lists.length; _i < _len; index = ++_i) {\n          headList = lists[index];\n          if (!(headList != null)) {\n            continue;\n          }\n          head = headList[0];\n          bad = false;\n          for (_j = 0, _len1 = lists.length; _j < _len1; _j++) {\n            otherList = lists[_j];\n            if (!(otherList !== headList)) {\n              continue;\n            }\n            i = 1;\n            while (item = otherList[i++]) {\n              if (item === head) {\n                bad = true;\n                break;\n              }\n            }\n            if (bad) {\n              break;\n            }\n          }\n          if (bad) {\n            continue;\n          }\n          out.push(head);\n          remainingLists = [];\n          for (_k = 0, _len2 = lists.length; _k < _len2; _k++) {\n            list = lists[_k];\n            if (list[0] === head) {\n              list.shift();\n            }\n            if (list.length) {\n              remainingLists.push(list);\n            }\n          }\n          return merge(out, remainingLists);\n        }\n        throw new TypeError(\"Ambiguous resolution order for '\" + (out.pop()) + \"'\");\n      };\n      return linearize = function(via) {\n        var lists, name, order, owner, parastate, parent, parents, path, paths, s, _i, _j, _len, _len1, _ref3, _ref4;\n        if (via == null) {\n          via = VIA_NONE;\n        }\n        if (this === this.root) {\n          order = [this];\n        } else {\n          parents = [];\n          if (paths = getParastateDeclarations.call(this)) {\n            owner = this.owner;\n            for (_i = 0, _len = paths.length; _i < _len; _i++) {\n              path = paths[_i];\n              if (!(parastate = state.own(owner, path))) {\n                throw new ReferenceError(\"Unresolvable parastate '\" + path + \"'\");\n              }\n              if (__indexOf.call(parents, parastate) < 0) {\n                parents.push(parastate);\n              }\n            }\n          }\n          parents.push(this.superstate);\n          lists = [];\n          for (_j = 0, _len1 = parents.length; _j < _len1; _j++) {\n            parent = parents[_j];\n            lists.push(((_ref3 = parent.order) != null ? _ref3 : parent.linearize()).slice(0));\n          }\n          lists.push(parents);\n          order = merge([this], lists);\n        }\n        this.order = order;\n        if (via & VIA_SUB) {\n          _ref4 = this._.substates;\n          for (name in _ref4) {\n            if (!__hasProp.call(_ref4, name)) continue;\n            s = _ref4[name];\n            s.linearize(via);\n          }\n        }\n        return order;\n      };\n    })();\n\n    State.prototype.express = (function() {\n      var cloneCategory, cloneEvents, cloneSubstates, express;\n      cloneCategory = function(object) {\n        var key, out, value;\n        if (object == null) {\n          return;\n        }\n        for (key in object) {\n          out = {};\n          break;\n        }\n        if (out) {\n          for (key in object) {\n            value = object[key];\n            out[key] = value && typeof value === 'object' ? clone(value) : value;\n          }\n        }\n        return out;\n      };\n      cloneEvents = function(events) {\n        var emitter, out, type;\n        if (events == null) {\n          return;\n        }\n        for (type in events) {\n          emitter = events[type];\n          if (emitter) {\n            out = {};\n            break;\n          }\n        }\n        for (type in events) {\n          emitter = events[type];\n          if (emitter) {\n            out[type] = clone(emitter.items);\n          }\n        }\n        return out;\n      };\n      cloneSubstates = function(substates, typed) {\n        var name, out, substate;\n        if (substates == null) {\n          return;\n        }\n        for (name in substates) {\n          out = {};\n          break;\n        }\n        for (name in substates) {\n          substate = substates[name];\n          out[name] = substate.express(typed);\n        }\n        return out;\n      };\n      return express = function(typed) {\n        var expression, _;\n        if (_ = this._) {\n          expression = edit({}, {\n            attributes: this.attributes,\n            data: cloneCategory(_.data),\n            methods: cloneCategory(_.methods),\n            events: cloneEvents(_.events),\n            guards: cloneCategory(_.guards),\n            states: cloneSubstates(_.substates, typed),\n            transitions: cloneCategory(_.transitions)\n          });\n        }\n        if (typed) {\n          return new this.Expression(expression);\n        } else {\n          return expression;\n        }\n      };\n    })();\n\n    State.prototype.mutate = (function() {\n      var diff, editEvent, isPlainObject, mutate;\n      NIL = O.NIL, isArray = O.isArray, isEmpty = O.isEmpty, isPlainObject = O.isPlainObject, edit = O.edit, diff = O.diff;\n      editEvent = function(object, emitter) {\n        var items, key, value, _results;\n        items = emitter.items;\n        _results = [];\n        for (key in object) {\n          if (!__hasProp.call(object, key)) continue;\n          value = object[key];\n          if (value === NIL) {\n            _results.push(emitter.remove(key));\n          } else if (value && value !== items[key]) {\n            _results.push(emitter.set(key, value));\n          } else {\n            _results.push(void 0);\n          }\n        }\n        return _results;\n      };\n      return mutate = function(expr) {\n        var Expression, after, attributes, before, data, element, emitter, event, events, guards, incipient, method, methods, mutable, name, residue, stateExpr, substates, transitionExpr, transitions, type, _base, _base1, _i, _len, _ref3, _ref4, _ref5, _ref6, _ref7;\n        attributes = this.attributes, Expression = this.Expression;\n        incipient = attributes & INCIPIENT;\n        if (!incipient && attributes & IMMUTABLE) {\n          return;\n        }\n        mutable = incipient || attributes & MUTABLE;\n        if (attributes & VIRTUAL) {\n          this.realize();\n        }\n        _ref3 = this._, data = _ref3.data, methods = _ref3.methods, events = _ref3.events, guards = _ref3.guards, substates = _ref3.substates, transitions = _ref3.transitions;\n        if (!(expr instanceof Expression)) {\n          expr = new Expression(expr);\n        }\n        if (!incipient) {\n          before = this.express();\n        }\n        this.attributes |= ATOMIC;\n        if (expr.data) {\n          this.data(expr.data);\n        }\n        if (mutable) {\n          _ref4 = expr.methods;\n          for (name in _ref4) {\n            if (!__hasProp.call(_ref4, name)) continue;\n            method = _ref4[name];\n            if (method !== NIL) {\n              this.addMethod(name, method);\n            } else {\n              this.removeMethod(name);\n            }\n          }\n        }\n        if (mutable) {\n          _ref5 = expr.events;\n          for (type in _ref5) {\n            if (!__hasProp.call(_ref5, type)) continue;\n            event = _ref5[type];\n            events || (events = (_base = this._).events || (_base.events = {}));\n            emitter = events[type];\n            if (event === NIL) {\n              if (emitter != null) {\n                emitter.empty();\n              }\n              continue;\n            }\n            if (!emitter && event && !isEmpty(event)) {\n              emitter = events[type] = new StateEventEmitter(this, type);\n            }\n            if (isArray(event)) {\n              for (_i = 0, _len = event.length; _i < _len; _i++) {\n                element = event[_i];\n                if ((element != null) && element !== NIL) {\n                  if (isPlainObject(element)) {\n                    editEvent(element, emitter);\n                  } else {\n                    this.addEvent(type, element);\n                  }\n                }\n              }\n            } else {\n              if (isPlainObject(event)) {\n                editEvent(event, emitter);\n              }\n            }\n            if (!emitter.length) {\n              emitter.destroy();\n              delete events[type];\n            }\n          }\n        }\n        if (mutable && expr.guards) {\n          guards || (guards = (_base1 = this._).guards || (_base1.guards = {}));\n          edit('deep', guards, expr.guards);\n        }\n        _ref6 = expr.substates;\n        for (name in _ref6) {\n          if (!__hasProp.call(_ref6, name)) continue;\n          stateExpr = _ref6[name];\n          if (substates && name in substates) {\n            if (stateExpr === NIL) {\n              this.removeSubstate(name);\n            } else {\n              substates[name].mutate(stateExpr);\n            }\n          } else {\n            if (stateExpr !== NIL) {\n              this.addSubstate(name, stateExpr);\n            }\n          }\n        }\n        if (mutable) {\n          _ref7 = expr.transitions;\n          for (name in _ref7) {\n            if (!__hasProp.call(_ref7, name)) continue;\n            transitionExpr = _ref7[name];\n            if (transitions && name in transitions) {\n              if (transitionExpr === NIL) {\n                delete transitions[name];\n              } else {\n                transitions[name] = new TransitionExpression(transitionExpr);\n              }\n            } else {\n              if (transitionExpr !== NIL) {\n                this.addTransition(name, transitionExpr);\n              }\n            }\n          }\n        }\n        this.attributes &= ~ATOMIC;\n        if (!incipient) {\n          after = this.express();\n          residue = diff(before, after);\n          if (!isEmpty(residue)) {\n            this.emit('mutate', [expr, residue, before, after], VIA_PROTO);\n          }\n        }\n        return this;\n      };\n    })();\n\n    State.prototype.destroy = function() {\n      var dispatcher, event, events, key, methods, name, owner, ownerMethod, root, substate, substates, superstate, transition, _;\n      owner = this.owner, root = this.root, superstate = this.superstate, _ = this._;\n      if (_) {\n        methods = _.methods, events = _.events, substates = _.substates;\n      }\n      if (transition = root._transition) {\n        if (this === root) {\n          transition.abort();\n        } else {\n          if ((transition.origin.isIn(this)) || (transition.target.isIn(this))) {\n            return false;\n          }\n        }\n      }\n      for (name in substates) {\n        if (!__hasProp.call(substates, name)) continue;\n        substate = substates[name];\n        substate.destroy();\n      }\n      this.emit('destroy', VIA_PROTO);\n      if (events) {\n        for (key in events) {\n          event = events[key];\n          event.destroy();\n          delete events[key];\n        }\n      }\n      if (this === root) {\n        for (name in methods) {\n          if (!(dispatcher = owner[name])) {\n            continue;\n          }\n          if (!dispatcher.isDispatcher) {\n            continue;\n          }\n          if (ownerMethod = dispatcher.original) {\n            owner[name] = ownerMethod;\n          } else {\n            delete owner[name];\n          }\n        }\n        delete owner[this.accessorName];\n      }\n      this._ = null;\n      this.attributes |= DESTROYED;\n      if (superstate != null) {\n        superstate.removeSubstate(this.name);\n      }\n      return true;\n    };\n\n    State.prototype.isVirtual = function() {\n      return !!(this.attributes & VIRTUAL);\n    };\n\n    State.prototype.isMutable = function() {\n      return !!(this.attributes & MUTABLE);\n    };\n\n    State.prototype.isFinite = function() {\n      return !!(this.attributes & FINITE);\n    };\n\n    State.prototype.isStatic = function() {\n      return !!(this.attributes & STATIC);\n    };\n\n    State.prototype.isImmutable = function() {\n      return !!(this.attributes & IMMUTABLE);\n    };\n\n    State.prototype.isInitial = function() {\n      return !!(this.attributes & INITIAL);\n    };\n\n    State.prototype.isConclusive = function() {\n      return !!(this.attributes & CONCLUSIVE);\n    };\n\n    State.prototype.isFinal = function() {\n      return !!(this.attributes & FINAL);\n    };\n\n    State.prototype.isAbstract = function() {\n      return !!(this.attributes & ABSTRACT);\n    };\n\n    State.prototype.isConcrete = function() {\n      return !!(this.attributes & CONCRETE);\n    };\n\n    State.prototype.isDefault = function() {\n      return !!(this.attributes & DEFAULT);\n    };\n\n    State.prototype.isReflective = function() {\n      return !!(this.attributes & REFLECTIVE);\n    };\n\n    State.prototype.hasHistory = function() {\n      return !!(this.attributes & HISTORY);\n    };\n\n    State.prototype.isRetained = function() {\n      return !!(this.attributes & RETAINED);\n    };\n\n    State.prototype.isShallow = function() {\n      return !!(this.attributes & SHALLOW);\n    };\n\n    State.prototype.isConcurrent = function() {\n      return !!(this.attributes & CONCURRENT);\n    };\n\n    State.prototype.substate = function(name, via) {\n      var s, ss, _ref3, _ref4, _ref5;\n      if (via == null) {\n        via = VIA_PROTO;\n      }\n      s = this.root._current;\n      while ((s != null ? s.attributes : void 0) & VIRTUAL && (ss = s.superstate)) {\n        if (ss === this && s.name === name) {\n          return s;\n        }\n        s = ss;\n      }\n      return ((_ref3 = this._) != null ? (_ref4 = _ref3.substates) != null ? _ref4[name] : void 0 : void 0) || via & VIA_PROTO && ((_ref5 = this.protostate) != null ? _ref5.substate(name) : void 0);\n    };\n\n    State.prototype.substates = function(virtual, deep) {\n      var name, result, s, ss, substate, _ref3, _ref4;\n      result = [];\n      if (virtual && (s = this.root._current) && s.attributes & VIRTUAL && this.isSuperstateOf(s)) {\n        while (s && s !== this && s.attributes & VIRTUAL && (ss = s.superstate)) {\n          if (deep || ss === this) {\n            result.unshift(s);\n          }\n          s = ss;\n        }\n      }\n      _ref4 = (_ref3 = this._) != null ? _ref3.substates : void 0;\n      for (name in _ref4) {\n        if (!__hasProp.call(_ref4, name)) continue;\n        substate = _ref4[name];\n        result.push(substate);\n        if (deep) {\n          result = result.concat(substate.substates(void 0, true));\n        }\n      }\n      return result;\n    };\n\n    State.prototype.descendants = function(virtual) {\n      return this.substates(virtual, true);\n    };\n\n    State.prototype.addSubstate = function(name, expression) {\n      var attributes, substate, substates, _base;\n      attributes = this.attributes;\n      if (!(attributes & INCIPIENT)) {\n        if (attributes & FINITE) {\n          return;\n        }\n        if (!(attributes & MUTABLE)) {\n          return;\n        }\n      }\n      if (attributes & VIRTUAL) {\n        this.realize();\n      }\n      substates = (_base = this._).substates || (_base.substates = {});\n      if (substate = substates[name]) {\n        substate.destroy();\n      }\n      substate = expression instanceof State ? expression.superstate === this ? expression.realize() : void 0 : new State(this, name, expression);\n      if (!substate) {\n        return null;\n      }\n      return substates[name] = substate;\n    };\n\n    State.prototype.removeSubstate = function(name) {\n      var attributes, substate, substates, transition, _ref3;\n      attributes = this.attributes;\n      if (attributes & VIRTUAL) {\n        return;\n      }\n      substates = (_ref3 = this._) != null ? _ref3.substates : void 0;\n      if (!(substate = substates != null ? substates[name] : void 0)) {\n        return;\n      }\n      if (!(attributes & MUTABLE || (substate != null ? substate.attributes : void 0) & DESTROYED)) {\n        return;\n      }\n      if ((transition = this.root._transition) && (substate.isSuperstateOf(transition) || substate === transition.origin || substate === transition.target)) {\n        return false;\n      }\n      if (this.root._current.isIn(substate)) {\n        this.change(this, {\n          forced: true\n        });\n      }\n      delete substates[name];\n      return substate;\n    };\n\n    State.prototype.derivation = function(byName) {\n      var results, s, ss;\n      results = [];\n      ss = this;\n      while ((s = ss) && (ss = s.superstate)) {\n        results.push(byName ? s.name || '' : s);\n      }\n      return results.reverse();\n    };\n\n    State.prototype.path = function() {\n      return this.derivation(true).join('.');\n    };\n\n    State.prototype.toString = State.prototype.path;\n\n    State.prototype.depth = function() {\n      var n, s;\n      n = 0;\n      s = this;\n      while (s = s.superstate) {\n        n += 1;\n      }\n      return n;\n    };\n\n    State.prototype.common = function(other) {\n      var s;\n      if (!(other instanceof State)) {\n        other = this.query(other);\n      }\n      if (this.depth() > other.depth()) {\n        s = other;\n        other = this;\n      } else {\n        s = this;\n      }\n      while (s) {\n        if (s === other || s.isSuperstateOf(other)) {\n          return s;\n        }\n        s = s.superstate;\n      }\n      return null;\n    };\n\n    State.prototype.is = function(other) {\n      if (!(other instanceof State)) {\n        other = this.query(other);\n      }\n      return other === this;\n    };\n\n    State.prototype.isIn = function(other) {\n      if (!(other instanceof State)) {\n        other = this.query(other);\n      }\n      return other === this || other.isSuperstateOf(this);\n    };\n\n    State.prototype.hasSubstate = function(other) {\n      if (!(other instanceof State)) {\n        other = this.query(other);\n      }\n      return other === this || this.isSuperstateOf(other);\n    };\n\n    State.prototype.isSuperstateOf = function(other) {\n      var superstate;\n      if (!(other instanceof State)) {\n        other = this.query(other);\n      }\n      if (superstate = other.superstate) {\n        return this === superstate || this.isSuperstateOf(superstate);\n      } else {\n        return false;\n      }\n    };\n\n    State.prototype.defaultSubstate = function(via, first) {\n      var protostate, s, substates, _i, _len, _ref3;\n      if (via == null) {\n        via = VIA_PROTO;\n      }\n      _ref3 = substates = this.substates();\n      for (_i = 0, _len = _ref3.length; _i < _len; _i++) {\n        s = _ref3[_i];\n        if (s.attributes & DEFAULT) {\n          return s;\n        }\n      }\n      first || substates.length && (first = substates[0]);\n      if (via & VIA_PROTO && (protostate = this.protostate)) {\n        return protostate.defaultSubstate(VIA_PROTO);\n      }\n      return first;\n    };\n\n    State.prototype.initialSubstate = function(via) {\n      var i, protostate, queue, s, subject, substates, _i, _len, _ref3;\n      if (via == null) {\n        via = VIA_PROTO;\n      }\n      i = 0;\n      queue = [this];\n      while (subject = queue[i++]) {\n        _ref3 = substates = subject.substates(void 0, !!VIA_PROTO);\n        for (_i = 0, _len = _ref3.length; _i < _len; _i++) {\n          s = _ref3[_i];\n          if (s.attributes & INITIAL) {\n            return s.initialSubstate(VIA_NONE) || s;\n          }\n          queue.push(s);\n        }\n      }\n      if (via & VIA_PROTO && (protostate = this.protostate)) {\n        return protostate.initialSubstate(VIA_PROTO);\n      }\n    };\n\n    State.prototype.getProtostate = function() {\n      var accessorName, getPrototypeOf, owner, path, protostate, prototype, root;\n      getPrototypeOf = O.getPrototypeOf;\n      owner = this.owner, root = this.root;\n      accessorName = root.accessorName;\n      path = this.path();\n      prototype = getPrototypeOf(owner);\n      while (prototype) {\n        if (protostate = typeof prototype[accessorName] === \"function\" ? prototype[accessorName](path, VIA_NONE) : void 0) {\n          return protostate;\n        }\n        prototype = getPrototypeOf(prototype);\n      }\n      return null;\n    };\n\n    State.prototype.isProtostateOf = function(other) {\n      var protostate;\n      if (!(other instanceof State)) {\n        other = this.query(other);\n      }\n      if (protostate = other.protostate) {\n        return this === protostate || this.isProtostateOf(protostate);\n      } else {\n        return false;\n      }\n    };\n\n    State.prototype.query = function(selector, against, via, toBeSkipped) {\n      var cursor, i, l, name, next, parts, queue, result, subject, substate, _i, _len, _ref3, _ref4, _ref5;\n      if (typeof against === 'number') {\n        toBeSkipped = via;\n        via = against;\n        against = void 0;\n      }\n      if (via == null) {\n        via = VIA_ALL;\n      }\n      if (selector == null) {\n        if (against === void 0) {\n          return null;\n        } else {\n          return false;\n        }\n      }\n      if (selector === '.') {\n        if (against === void 0) {\n          return this;\n        } else {\n          return against === this;\n        }\n      }\n      if (selector === '') {\n        if (against === void 0) {\n          return this.root;\n        } else {\n          return against === this.root;\n        }\n      }\n      if (against && against === this.root && /^\\*+$/.test(selector)) {\n        return true;\n      }\n      if (/^\\.*\\**$/.test(selector)) {\n        via &= ~(VIA_SUB | VIA_SUPER);\n      }\n      if (selector.charAt(0) !== '.') {\n        return this.root.query('.' + selector, against, VIA_SUB | VIA_PROTO);\n      }\n      selector = selector.replace(/^(\\.+)\\.$/, '$1');\n      parts = selector.split('.');\n      i = 0;\n      l = parts.length;\n      cursor = this;\n      while (cursor) {\n        i += 1;\n        if (i >= l) {\n          return (against ? against === cursor : cursor);\n        }\n        name = parts[i];\n        if (name === '*') {\n          if (!against) {\n            return cursor.substates();\n          }\n          if (cursor === against.superstate) {\n            return true;\n          }\n          break;\n        }\n        if (name === '**') {\n          if (!against) {\n            return cursor.substates(void 0, true);\n          }\n          if (cursor.isSuperstateOf(against)) {\n            return true;\n          }\n          break;\n        }\n        if (name === '') {\n          cursor = cursor.superstate;\n        } else if (next = cursor.substate(name)) {\n          cursor = next;\n        } else {\n          break;\n        }\n      }\n      if (via & VIA_SUB) {\n        i = 0;\n        queue = [this];\n        while (subject = queue[i++]) {\n          _ref3 = subject.substates(true);\n          for (_i = 0, _len = _ref3.length; _i < _len; _i++) {\n            substate = _ref3[_i];\n            if (substate === toBeSkipped) {\n              continue;\n            }\n            result = substate.query(selector, against, VIA_NONE);\n            if (result) {\n              return result;\n            }\n            queue.push(substate);\n          }\n        }\n      }\n      if (via & VIA_SUPER) {\n        if (result = (_ref4 = this.superstate) != null ? _ref4.query(selector, against, via & VIA_SUB | VIA_SUPER, via & VIA_SUB ? this : void 0) : void 0) {\n          return result;\n        }\n      }\n      if (via & VIA_PROTO) {\n        if (result = (_ref5 = this.protostate) != null ? _ref5.query(selector, against, via) : void 0) {\n          return result;\n        }\n      }\n      if (against) {\n        return false;\n      } else {\n        return null;\n      }\n    };\n\n    State.prototype.$ = function() {\n      var args, expr, match, method;\n      expr = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (typeof expr === 'function') {\n        if (expr = expr()) {\n          return this.change.apply(this, [expr].concat(args));\n        }\n      } else if (typeof expr === 'string' && (match = expr.match(rxTransitionArrow)) && (method = transitionArrowMethods[match[1]])) {\n        if (args.length) {\n          return this[method].apply(this, [match[2]].concat(args));\n        } else {\n          return this[method](match[2]);\n        }\n      }\n    };\n\n    State.prototype.current = function() {\n      return this.root._current;\n    };\n\n    State.prototype.isCurrent = function() {\n      return this === this.current();\n    };\n\n    State.prototype.isActive = function() {\n      var current;\n      return this === (current = this.current()) || this.isSuperstateOf(current);\n    };\n\n    State.prototype.change = function(target, options) {\n      var root;\n      return (root = this.root).change.apply(root, arguments);\n    };\n\n    State.prototype.go = State.prototype.change;\n\n    State.prototype.be = State.prototype.change;\n\n    State.prototype.data = function(via, out) {\n      var attributes, mutation, relative, residue, _base, _i, _ref3, _ref4, _ref5, _ref6;\n      if (via == null) {\n        via = VIA_ALL;\n      }\n      if (via !== via << 0) {\n        mutation = via;\n      }\n      if (mutation) {\n        attributes = this.attributes;\n        if (attributes & INCIPIENT_OR_MUTABLE && !isEmpty(mutation)) {\n          if (attributes & VIRTUAL) {\n            return this.realize().data(mutation);\n          }\n          residue = delta((_base = this._).data != null ? (_base = this._).data : _base.data = {}, mutation);\n          if (~attributes & ATOMIC && residue && !isEmpty(residue)) {\n            this.emit('mutate', [mutation, residue], VIA_PROTO);\n          }\n        }\n        return this;\n      } else {\n        if (out == null) {\n          out = {};\n        }\n        _ref4 = (_ref3 = this.order) != null ? _ref3 : this.linearize();\n        for (_i = _ref4.length - 1; _i >= 0; _i += -1) {\n          relative = _ref4[_i];\n          if (!(via & VIA_SUPER || relative === this)) {\n            continue;\n          }\n          edit('deep all', out, (via & VIA_PROTO ? (_ref5 = relative.protostate) != null ? _ref5.data(VIA_PROTO, out) : void 0 : void 0), (_ref6 = relative._) != null ? _ref6.data : void 0);\n        }\n        return out;\n      }\n    };\n\n    State.prototype.has = function(key, via) {\n      var data, relative, s, viaProto, viaSuper, _i, _len, _ref3, _ref4, _ref5;\n      if (via == null) {\n        via = VIA_ALL;\n      }\n      viaSuper = via & VIA_SUPER;\n      viaProto = via & VIA_PROTO;\n      _ref4 = (_ref3 = this.order) != null ? _ref3 : this.linearize();\n      for (_i = 0, _len = _ref4.length; _i < _len; _i++) {\n        relative = _ref4[_i];\n        s = relative;\n        while (s != null) {\n          if (((data = (_ref5 = s._) != null ? _ref5.data : void 0) != null) && hasOwn.call(data, key)) {\n            return true;\n          }\n          if (viaProto) {\n            s = s.protostate;\n          } else {\n            break;\n          }\n          if (viaSuper) {\n            continue;\n          }\n        }\n      }\n      return false;\n    };\n\n    State.prototype.get = function(key, via) {\n      var data, relative, s, viaProto, viaSuper, _i, _len, _ref3, _ref4, _ref5;\n      if (via == null) {\n        via = VIA_ALL;\n      }\n      viaSuper = via & VIA_SUPER;\n      viaProto = via & VIA_PROTO;\n      _ref4 = (_ref3 = this.order) != null ? _ref3 : this.linearize();\n      for (_i = 0, _len = _ref4.length; _i < _len; _i++) {\n        relative = _ref4[_i];\n        s = relative;\n        while (s != null) {\n          if (((data = (_ref5 = s._) != null ? _ref5.data : void 0) != null) && hasOwn.call(data, key)) {\n            return data[key];\n          }\n          if (viaProto) {\n            s = s.protostate;\n          } else {\n            break;\n          }\n        }\n        if (viaSuper) {\n          continue;\n        }\n      }\n    };\n\n    State.prototype[\"let\"] = function(key, value) {\n      var attributes, data, displaced, mutation, residue, _base;\n      attributes = this.attributes;\n      if (!(attributes & INCIPIENT_OR_MUTABLE)) {\n        return;\n      }\n      if (attributes & VIRTUAL) {\n        this.realize();\n      }\n      data = (_base = this._).data || (_base.data = {});\n      if (value !== (displaced = lookup(data, key))) {\n        assign(data, key, value);\n        assign((mutation = {}).data = {}, key, value);\n        assign((residue = {}).data = {}, key, displaced);\n        this.emit('mutate', [mutation, residue], VIA_PROTO);\n      }\n      return value;\n    };\n\n    State.prototype.set = function(key, value) {\n      var attributes, data, relative, _i, _len, _ref3, _ref4, _ref5;\n      attributes = this.attributes;\n      if (!(attributes & INCIPIENT_OR_MUTABLE)) {\n        return;\n      }\n      if (attributes & VIRTUAL) {\n        this.realize();\n      }\n      _ref4 = (_ref3 = this.order) != null ? _ref3 : this.linearize();\n      for (_i = 0, _len = _ref4.length; _i < _len; _i++) {\n        relative = _ref4[_i];\n        if (((data = (_ref5 = relative._) != null ? _ref5.data : void 0) != null) && hasOwn.call(data, key)) {\n          if (relative.attributes & MUTABLE) {\n            return relative[\"let\"](key, value);\n          }\n          break;\n        }\n      }\n      return this[\"let\"](key, value);\n    };\n\n    State.prototype[\"delete\"] = function(key) {\n      if (!(this.attributes & MUTABLE)) {\n        return;\n      }\n      return NIL === this[\"let\"](key, NIL);\n    };\n\n    State.prototype.method = function(methodName, via, out, returnBoxed) {\n      var attributes, context, inherited, method, realized, record, relative, table, viaProto, _base, _i, _len, _ref10, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;\n      if (via == null) {\n        via = VIA_ALL;\n      }\n      attributes = this.attributes;\n      realized = ~attributes & VIRTUAL;\n      while (true) {\n        if (realized) {\n          if (method = (_ref3 = this._) != null ? (_ref4 = _ref3.methods) != null ? _ref4[methodName] : void 0 : void 0) {\n            context = this;\n            break;\n          }\n          if (record = (_ref5 = this._) != null ? (_ref6 = _ref5.__dispatch_table__) != null ? _ref6[methodName] : void 0 : void 0) {\n            method = record[0], context = record[1];\n            if (method != null) {\n              break;\n            }\n          }\n        }\n        if (viaProto = via & VIA_PROTO) {\n          if (method = (_ref7 = this.protostate) != null ? _ref7.method(methodName, VIA_PROTO, out, true) : void 0) {\n            context = this;\n            inherited = true;\n            break;\n          }\n        }\n        if (via & VIA_SUPER) {\n          _ref9 = (_ref8 = this.order) != null ? _ref8 : this.linearize();\n          for (_i = 0, _len = _ref9.length; _i < _len; _i++) {\n            relative = _ref9[_i];\n            if (relative !== this) {\n              if (method = relative.method(methodName, viaProto, out, true)) {\n                context = (_ref10 = out != null ? out.context : void 0) != null ? _ref10 : null;\n                inherited = true;\n                break;\n              }\n            }\n          }\n          if (method != null) {\n            break;\n          }\n        }\n        context = null;\n        break;\n      }\n      if (method != null) {\n        if (typeof method === 'function') {\n          context = null;\n        }\n        if (realized && inherited && useDispatchTables) {\n          table = (_base = this._).__dispatch_table__ != null ? (_base = this._).__dispatch_table__ : _base.__dispatch_table__ = {};\n          table[methodName] = [method, context];\n        }\n        if (!returnBoxed) {\n          if (method.type === 'state-bound-function') {\n            method = method.fn;\n          }\n        }\n      }\n      if (out != null) {\n        out.method = method;\n        out.context = context;\n      }\n      return method;\n    };\n\n    State.prototype.methodNames = function() {\n      var methods, _ref3;\n      if (methods = (_ref3 = this._) != null ? _ref3.methods : void 0) {\n        return keys(methods);\n      }\n    };\n\n    State.prototype.addMethod = function(methodName, fn) {\n      var methods, owner, ownerMethod, root, _ref3, _ref4, _ref5;\n      if (!(this.attributes & INCIPIENT_OR_MUTABLE)) {\n        return;\n      }\n      if (typeof fn === 'object' && fn.type === 'state-fixed-function') {\n        fn = fn.fn(this, this.protostate);\n      }\n      if (!(typeof fn === 'function' || (fn != null ? fn.type : void 0) === 'state-bound-function')) {\n        throw new TypeError(\"Must supply a plain, bound, or fixed function\");\n      }\n      owner = this.owner;\n      if (!((_ref3 = (ownerMethod = owner[methodName])) != null ? _ref3.isDispatcher : void 0)) {\n        root = this.root;\n        owner[methodName] = createDispatcher(root.accessorName, methodName, ownerMethod);\n        if ((ownerMethod != null) && this !== root) {\n          methods = (_ref4 = root._) != null ? _ref4.methods || (_ref4.methods = {}) : void 0;\n          methods[methodName] = ownerMethod;\n        }\n      }\n      methods = (_ref5 = this._) != null ? _ref5.methods || (_ref5.methods = {}) : void 0;\n      return methods[methodName] = fn;\n    };\n\n    State.prototype.removeMethod = function(methodName) {\n      var fn, methods, _ref3;\n      if (!(this.attributes & MUTABLE && (methods = (_ref3 = this._) != null ? _ref3.methods : void 0) && (fn = methods[methodName]))) {\n        return;\n      }\n      delete methods[methodName];\n      return fn;\n    };\n\n    State.prototype.hasMethod = function(methodName) {\n      var method;\n      return method = this.method(methodName);\n    };\n\n    State.prototype.hasOwnMethod = function(methodName) {\n      return !!this.method(methodName, VIA_NONE);\n    };\n\n    State.prototype.apply = function(methodName, args) {\n      var context, method, out, record, _ref3, _ref4;\n      if (record = (_ref3 = this._) != null ? (_ref4 = _ref3.__dispatch_table__) != null ? _ref4[methodName] : void 0 : void 0) {\n        method = record[0], context = record[1];\n        if ((method != null ? method.type : void 0) === 'state-bound-function') {\n          method = method.fn;\n        }\n      }\n      if (method == null) {\n        if (method = this.method(methodName, VIA_ALL, out = {})) {\n          context = out.context;\n        } else {\n          this.emit('noSuchMethod', [methodName, args]);\n          this.emit('noSuchMethod:' + methodName, args);\n          return;\n        }\n      }\n      return method.apply(context || this.owner, args);\n    };\n\n    State.prototype.call = function() {\n      var args, methodName;\n      methodName = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      return this.apply(methodName, args);\n    };\n\n    State.prototype.event = function(eventType, id) {\n      var emitter, _ref3, _ref4;\n      if (!(emitter = (_ref3 = this._) != null ? (_ref4 = _ref3.events) != null ? _ref4[eventType] : void 0 : void 0)) {\n        return;\n      }\n      if (id === void 0) {\n        return emitter.length;\n      }\n      if (typeof id === 'function') {\n        id = emitter.key(id);\n      }\n      return emitter.get(id);\n    };\n\n    State.prototype.addEvent = function(eventType, fn, context) {\n      var events, _base;\n      if (this.attributes & VIRTUAL) {\n        this.realize();\n      }\n      events = (_base = this._).events || (_base.events = {});\n      if (!hasOwn.call(events, eventType)) {\n        events[eventType] = new StateEventEmitter(this);\n      }\n      if (fn.type === 'state-fixed-function') {\n        fn = fn.fn(this, this.protostate);\n      }\n      return events[eventType].add(fn, context);\n    };\n\n    State.prototype.on = State.prototype.addEvent;\n\n    State.prototype.removeEvent = function(eventType, id) {\n      var _ref3, _ref4;\n      return (_ref3 = this._) != null ? (_ref4 = _ref3.events) != null ? _ref4[eventType].remove(id) : void 0 : void 0;\n    };\n\n    State.prototype.off = State.prototype.removeEvent;\n\n    State.prototype.emit = function(eventType, args, context, via) {\n      var relative, _i, _len, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8;\n      if (via == null) {\n        via = VIA_ALL;\n      }\n      if (typeof eventType !== 'string') {\n        return;\n      }\n      if (typeof args === 'number') {\n        via = context;\n        context = args;\n        args = void 0;\n      }\n      if (typeof context === 'number') {\n        via = context;\n        context = void 0;\n      }\n      if ((args != null) && !isArray(args)) {\n        args = [args];\n      }\n      if ((_ref3 = this._) != null) {\n        if ((_ref4 = _ref3.events) != null) {\n          if ((_ref5 = _ref4[eventType]) != null) {\n            _ref5.emit(args, context != null ? context : this);\n          }\n        }\n      }\n      if (via & VIA_PROTO) {\n        if ((_ref6 = this.protostate) != null) {\n          _ref6.emit(eventType, args, context != null ? context : this, VIA_PROTO);\n        }\n      }\n      if (via & VIA_SUPER) {\n        _ref8 = (_ref7 = this.order) != null ? _ref7 : this.linearize();\n        for (_i = 0, _len = _ref8.length; _i < _len; _i++) {\n          relative = _ref8[_i];\n          if (relative !== this) {\n            relative.emit(eventType, args, context != null ? context : relative);\n          }\n        }\n      }\n    };\n\n    State.prototype.trigger = State.prototype.emit;\n\n    State.prototype.guard = function(guardType) {\n      var guard, _ref3, _ref4, _ref5;\n      if (guard = (_ref3 = this._) != null ? (_ref4 = _ref3.guards) != null ? _ref4[guardType] : void 0 : void 0) {\n        return clone(guard);\n      } else {\n        return ((_ref5 = this.protostate) != null ? _ref5.guard(guardType) : void 0) || void 0;\n      }\n    };\n\n    State.prototype.addGuard = function(guardType, guard) {\n      var attributes, guards, _base;\n      attributes = this.attributes;\n      if (!(attributes & INCIPIENT_OR_MUTABLE)) {\n        return;\n      }\n      if (attributes & VIRTUAL) {\n        this.realize();\n      }\n      guards = (_base = this._).guards || (_base.guards = {});\n      return edit(guards[guardType] || (guards[guardType] = {}), guard);\n    };\n\n    State.prototype.removeGuard = function() {\n      var args, attributes, entry, guard, guardType, guards, key, _i, _len, _ref3;\n      guardType = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      attributes = this.attributes;\n      if (attributes & VIRTUAL) {\n        return;\n      }\n      if (!(attributes & MUTABLE && (guards = this._.guards))) {\n        return;\n      }\n      if (!(guard = guards[guardType])) {\n        return null;\n      }\n      if (!args.length) {\n        return (delete guards[guardType] ? guard : void 0);\n      }\n      _ref3 = flatten(args);\n      for (_i = 0, _len = _ref3.length; _i < _len; _i++) {\n        key = _ref3[_i];\n        if (!(typeof key === 'string')) {\n          continue;\n        }\n        entry = guard[key];\n        if (delete guard[key]) {\n          return entry;\n        }\n      }\n    };\n\n    State.prototype.transition = function(name) {\n      var _ref3, _ref4;\n      return (_ref3 = this._) != null ? (_ref4 = _ref3.transitions) != null ? _ref4[name] : void 0 : void 0;\n    };\n\n    State.prototype.transitions = function() {\n      var _ref3;\n      return clone((_ref3 = this._) != null ? _ref3.transitions : void 0);\n    };\n\n    State.prototype.addTransition = function(name, expression) {\n      var attributes, transitions, _base;\n      attributes = this.attributes;\n      if (!(attributes & INCIPIENT_OR_MUTABLE)) {\n        return;\n      }\n      if (attributes & VIRTUAL) {\n        this.realize();\n      }\n      if (!(expression instanceof TransitionExpression)) {\n        expression = new TransitionExpression(expression);\n      }\n      transitions = (_base = this._).transitions || (_base.transitions = {});\n      return transitions[name] = expression;\n    };\n\n    State.prototype.removeTransition = function(name) {\n      var attributes, transition, transitions;\n      attributes = this.attributes;\n      if (attributes & VIRTUAL) {\n        return;\n      }\n      if (!(attributes & MUTABLE && (transitions = this._.transitions))) {\n        return;\n      }\n      transition = transitions[name];\n      if (transition) {\n        delete transitions[name];\n      }\n      return transition;\n    };\n\n    return State;\n\n  })();\n\n  State.prototype.Metaobject = require('./state-metaobject');\n\n  State.prototype.Expression = StateExpression = require('./state-expression');\n\n  StateEventEmitter = require('./state-event-emitter');\n\n  TransitionExpression = require('./transition-expression');\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}