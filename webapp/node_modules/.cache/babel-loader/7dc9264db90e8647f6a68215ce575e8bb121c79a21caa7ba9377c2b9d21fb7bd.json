{"ast":null,"code":"// Copyright (C) 2011-2013\n// Nick Fargo, Z Vector Inc.\n//\n// [`LICENSE`](https://github.com/nickfargo/omicron/blob/master/LICENSE) MIT.\n//\n// Omicron (**“O”**) is a small JavaScript library of functions and tools that\n// assist with:\n//\n// * Object manipulation and differential operations\n// * Prototypal inheritance\n// * Selected general tasks: safe typing, functional iteration, etc.\n//\n// [omicronjs.org](http://omicronjs.org/)\n//\n// <a class=\"icon-large icon-octocat\"\n//    href=\"http://github.com/nickfargo/omicron/\"></a>\n\n;\n(function (undefined) {\n  var global = this;\n  var O = {\n    VERSION: '0.2.0',\n    env: {\n      server: typeof module !== 'undefined' && typeof require !== 'undefined' && !!module.exports,\n      client: typeof window !== 'undefined' && window === global,\n      debug: false\n    }\n  };\n\n  // #### [NIL](#nil)\n  //\n  // Unique object reference. Used by [`edit`](#edit) and the related\n  // differential operation functions, where an object with a property whose\n  // value is set to `NIL` indicates the absence or deletion of the\n  // corresponding property on an associated operand.\n  var NIL = O.NIL = function () {\n    function NIL() {}\n    return new NIL();\n  }();\n\n  // #### [toString](#to-string)\n  //\n  var toString = O.toString = Object.prototype.toString;\n\n  // #### [hasOwn](#has-own)\n  //\n  var hasOwn = O.hasOwn = Object.prototype.hasOwnProperty;\n\n  // #### [trim](#trim)\n  //\n  var trim = O.trim = String.prototype.trim ? function (text) {\n    return text == null ? '' : String.prototype.trim.call(text);\n  } : function (text) {\n    return text == null ? '' : text.toString().replace(/^\\s+/, '').replace(/\\s+$/, '');\n  };\n\n  // #### [slice](#slice)\n  //\n  var slice = O.slice = Array.prototype.slice;\n\n  // #### [noConflict](#no-conflict)\n  //\n  O.noConflict = function () {\n    var original = global.O;\n    return function () {\n      global.O = original;\n      return this;\n    };\n  }();\n\n  // #### [noop](#noop)\n  //\n  // General-purpose empty function.\n\n  function noop() {}\n  O.noop = noop;\n\n  // #### [getThis](#get-this)\n  //\n  // Like [`noop`](#noop), except suited for substitution on methods that would\n  // normally return their context object.\n\n  function getThis() {\n    return this;\n  }\n  O.getThis = getThis;\n\n  // Calls the specified native function if it exists and returns its result; if\n  // no such function exists on `obj` as registered in `__native.fn`, the unique\n  // [`NIL`](#nil) is returned (as opposed to `null` or `undefined`, either of\n  // which may be a valid result from the native function itself).\n\n  function __native(item, obj /* , ... */) {\n    var n = __native.fn[item];\n    return n && obj[item] === n ? n.apply(obj, slice.call(arguments, 2)) : NIL;\n  }\n  __native.fn = {\n    forEach: Array.prototype.forEach,\n    indexOf: Array.prototype.indexOf\n  };\n\n  // #### [type](#type)\n  //\n  // A browser-safe universal alternative to `typeof` that checks against\n  // `Object.prototype.toString`.\n\n  var type = function () {\n    var map = {};\n    var types = 'Arguments Array Boolean Date Error Function Number Object \\\n               RegExp String';\n    forEach(types.split(/\\s+/), function (name) {\n      map[\"[object \" + name + \"]\"] = name.toLowerCase();\n    });\n    function type(obj) {\n      if (obj == null) return String(obj);\n      return map[toString.call(obj)] || 'object';\n    }\n    return type;\n  }();\n  O.type = type;\n\n  // #### [isNumber](#is-number)\n\n  function isNumber(n) {\n    return isFinite(n) && !isNaN(parseFloat(n));\n  }\n  O.isNumber = isNumber;\n\n  // #### [isArray](#is-array)\n  //\n  // > Requires: `toString`\n\n  function isArray(obj) {\n    return toString.call(obj) === '[object Array]';\n  }\n  O.isArray = isArray;\n\n  // #### [isError](#is-error)\n  //\n  // > Requires: `toString`\n\n  function isError(e) {\n    return typeof e === 'object' && toString.call(e) === '[object Error]';\n  }\n  O.isError = isError;\n\n  // #### [isPlainObject](#is-plain-object)\n  //\n  // Near-straight port of jQuery `isPlainObject`.\n  //\n  // > Requires: `type`, `hasOwn`\n\n  function isPlainObject(obj) {\n    var key;\n    if (!obj || type(obj) !== 'object' || obj.nodeType || obj === global || obj.constructor && !hasOwn.call(obj, 'constructor') && !hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {\n      return false;\n    }\n    for (key in obj) {}\n    return key === undefined || hasOwn.call(obj, key);\n  }\n  O.isPlainObject = isPlainObject;\n\n  // #### [isEmpty](#is-empty)\n  //\n  // Returns a boolean indicating whether the object or array at `obj` contains\n  // any members. For an `Object` type, if `andPrototype` is included and truthy,\n  // `obj` must be empty throughout its prototype chain as well.\n  //\n  // > Requires: `isArray`, `hasOwn`\n\n  function isEmpty(obj, andPrototype) {\n    var key;\n    if (isArray(obj) && obj.length) return false;\n    for (key in obj) if (andPrototype || hasOwn.call(obj, key)) {\n      return false;\n    }\n    return true;\n  }\n  O.isEmpty = isEmpty;\n\n  // #### [isEqual](#is-equal)\n  //\n  // Performs a deep equality test.\n  //\n  // > Requires: `edit`, `isEmpty`\n\n  function isEqual(subject, object) {\n    return subject === object || isEmpty(edit('deep all absolute immutable delta', subject, object || {}));\n  }\n  O.isEqual = isEqual;\n\n  // #### [forEach](#for-each)\n  //\n  // Functional iterator with ES5-style callback signature of\n  // `value, key, object`.\n\n  function forEach(obj, fn, context) {\n    var n, l, k, i;\n    if (obj == null) return;\n    if ((n = __native('forEach', obj, fn, context)) !== NIL) return n;\n    if ((l = obj.length) === undefined || typeof obj === 'function') {\n      for (k in obj) {\n        if (fn.call(context || obj[k], obj[k], k, obj) === false) {\n          break;\n        }\n      }\n    } else {\n      for (i = 0, l = obj.length; i < l;) {\n        if (fn.call(context || obj[i], obj[i], i++, obj) === false) {\n          break;\n        }\n      }\n    }\n    return obj;\n  }\n  O.forEach = O.each = forEach;\n\n  // #### [edit](#edit)\n  //\n  // Performs a differential operation across multiple objects.\n  //\n  // By default, `edit` returns the first object-typed argument as `subject`, to\n  // which each subsequent `source` argument is copied in order. Optionally the\n  // first argument may be either a Boolean `deep`, or a whitespace-delimited\n  // `flags` String containing any of the following keywords:\n  //\n  // * `deep` : If a `source` property is an object or array, a structured clone\n  //      is created on `subject`.\n  //\n  // * `own` : Excludes `source` properties filtered by `Object.hasOwnProperty`.\n  //\n  // * `all` : Includes `source` properties with values of `NIL` or `undefined`.\n  //\n  // * `delta` : Returns the **delta**, a structured object that reflects the\n  //      changes made to the properties of `subject`. If multiple object\n  //      arguments are provided, an array of deltas is returned. (Applying the\n  //      deltas in reverse order in an `edit('deep')` on `subject` would revert\n  //      the contents of `subject` to their original state.)\n  //\n  // * `immutable` : Leaves `subject` unchanged. Useful, for example, in\n  //      combination with flags `delta` and `absolute` for non-destructively\n  //      computing a differential between `source` and `subject`.\n  //\n  // * `absolute` : By default an edit operation is *relative*, in that the\n  //      properties of `subject` affected by the operation are limited to those\n  //      also present within each `source`. By including the `absolute` flag,\n  //      properties in `subject` that are *not* also present within each\n  //      `source` will be deleted from `subject`, and will also affect any\n  //      returned delta accordingly.\n  //\n  // Contains techniques and influences from the deep-cloning procedure of\n  // `jQuery.extend`, with which `edit` also retains a compatible interface.\n  //\n  // > See also: [`clone`](#clone), [`delta`](#delta), [`diff`](#diff),\n  // [`assign`](#assign)\n  function edit() {\n    var i, l, t, flags, flagsString, subject, subjectIsArray, deltas, delta, key, value, valueIsArray, source, target, clone, result;\n    i = 0;\n    l = arguments.length;\n    t = type(arguments[0]);\n    if (t === 'boolean') {\n      flagsString = 'deep';\n      flags = {\n        deep: flagsString\n      };\n      i += 1;\n    } else if (t === 'string') {\n      flagsString = arguments[i];\n      flags = assign(flagsString);\n      i += 1;\n    } else {\n      flags = NIL;\n    }\n    subject = arguments[i] || {};\n    i += 1;\n    if (typeof subject !== 'object' && typeof subject !== 'function') {\n      subject = {};\n    }\n    subjectIsArray = isArray(subject);\n    flags.delta && l - 1 > i && (deltas = []);\n    for (; i < l; i++) {\n      flags.delta && (delta = subjectIsArray ? [] : {});\n      deltas && deltas.push(delta);\n      source = arguments[i];\n      if (source == null) continue;\n      for (key in source) if (!flags.own || hasOwn.call(source, key)) {\n        value = source[key];\n        if (value === subject) continue;\n        if (value === NIL && !flags.all) {\n          delta && (delta[key] = subject[key]);\n          flags.immutable || delete subject[key];\n        } else if (flags.deep && value && (isPlainObject(value) || (valueIsArray = isArray(value)))) {\n          target = subject[key];\n          if (valueIsArray) {\n            valueIsArray = false;\n            clone = target && isArray(target) ? target : [];\n          } else {\n            clone = target && (typeof target === 'object' || typeof target === 'function') ? target : {};\n          }\n          result = edit(flagsString, clone, value);\n          if (delta) {\n            if (hasOwn.call(subject, key)) {\n              if (result && !isEmpty(result)) {\n                delta[key] = result;\n              }\n            } else {\n              delta[key] = NIL;\n            }\n          }\n          flags.immutable || (subject[key] = clone);\n        } else if ((value !== undefined || flags.all) && (!hasOwn.call(subject, key) || subject[key] !== value)) {\n          if (delta) {\n            delta[key] = hasOwn.call(subject, key) ? subject[key] : NIL;\n          }\n          flags.immutable || (subject[key] = value);\n        }\n      }\n      if (flags.absolute && (flags.delta || !flags.immutable)) {\n        for (key in subject) if (hasOwn.call(subject, key)) {\n          if (!(flags.own ? hasOwn.call(source, key) : key in source)) {\n            delta && (delta[key] = subject[key]);\n            flags.immutable || delete subject[key];\n          }\n        }\n      }\n    }\n    return deltas || delta || subject;\n  }\n  O.edit = O.extend = edit;\n\n  // #### [clone](#clone)\n  //\n  // Specialization of [`edit`](#edit).\n  //\n  // > Requires: `edit`, `isArray`\n\n  function clone() {\n    return edit.apply(O, ['deep all', isArray(arguments[0]) ? [] : {}].concat(slice.call(arguments)));\n  }\n  O.clone = clone;\n\n  // #### [delta](#delta)\n  //\n  // Specialization of [`edit`](#edit) that applies changes defined in `source`\n  // to `subject`, and returns the **anti-delta**: a structured map containing\n  // the properties of `subject` displaced by the operation. Previously\n  // nonexistent properties are recorded as [`NIL`](#nil) in the anti-delta.\n  // The prior condition of `subject` can be restored in a single transaction\n  // by immediately providing this anti-delta object as the `source` argument in\n  // a subsequent `edit` operation upon `subject`.\n  //\n  // > Requires: `edit`\n\n  function delta() {\n    return edit.apply(O, ['deep delta'].concat(slice.call(arguments)));\n  }\n  O.delta = delta;\n\n  // #### [diff](#diff)\n  //\n  // Specialization of [`edit`](#edit) that returns the delta between the\n  // provided `subject` and `source`. Operates similarly to [`delta`] except no\n  // changes are made to `subject`, and `source` is evaluated absolutely rather\n  // than applied relatively.\n  //\n  // > Requires: `edit`\n\n  function diff() {\n    return edit.apply(O, ['deep delta immutable absolute'].concat(slice.call(arguments)));\n  }\n  O.diff = diff;\n\n  // #### [assign](#assign)\n  //\n  // Facilitates one or more assignments of a value to one or more keys of an\n  // object.\n  //\n  // > Requires: `NIL`, `hasOwn`\n\n  function assign(target, map, value, separator) {\n    var argLen, valuesMirrorKeys, key, list, i, l;\n    argLen = arguments.length;\n    if (typeof target === 'string') {\n      valuesMirrorKeys = argLen === 1;\n      value = map;\n      map = target;\n      target = {};\n    } else {\n      if (typeof map === 'string') {\n        if (argLen === 2) {\n          valuesMirrorKeys = true;\n        } else {\n          // `value` is present, and `map` is a key or \"deep key\";\n          // do `lookup`-style assignment\n          list = map.split(separator || '.');\n          for (i = 0, l = list.length; i < l; i++) {\n            // To proceed `target` must be an `Object`.\n            if (target == null || typeof target !== 'object' && typeof target !== 'function') return;\n            key = list[i];\n\n            // If at the end of the deep-key, assign/delete and return.\n            // For deletions, return `NIL` to indicate a `true` result\n            // from the `delete` operator.\n            if (i === l - 1) {\n              if (value === NIL) {\n                return delete target[key] ? NIL : undefined;\n              } else {\n                return target[key] = value;\n              }\n            }\n\n            // Advance `target` to the next level. If nothing is there\n            // already, then: for an assignment, create a new object in\n            // place and continue; for a deletion, return `NIL`\n            // immediately to reflect what would have been a `true`\n            // result from the `delete` operator.\n            if (hasOwn.call(target, key)) {\n              target = target[key];\n            } else {\n              if (value === NIL) return NIL;\n              target = target[key] = {};\n            }\n          }\n        }\n      } else if (map === undefined) {\n        map = target;\n        target = {};\n      }\n    }\n    if (typeof map === 'string') {\n      key = map;\n      (map = {})[key] = value;\n    }\n    for (key in map) if (hasOwn.call(map, key)) {\n      list = key.split(/\\s+/);\n      if (valuesMirrorKeys) {\n        for (i = 0, l = list.length; i < l; i++) {\n          value = list[i];\n          target[value] = value;\n        }\n      } else {\n        value = map[key];\n        for (i = 0, l = list.length; i < l; i++) {\n          target[list[i]] = value;\n        }\n      }\n    }\n    return target;\n  }\n  O.assign = assign;\n\n  // #### [flatten](#flatten)\n  //\n  // Extracts elements of nested arrays into a single flat array.\n  //\n  // > Requires: `isArray`\n\n  function flatten(array) {\n    if (!isArray(array)) array = [array];\n    var i = 0;\n    var l = array.length;\n    var item;\n    var result = [];\n    while (i < l) {\n      item = array[i++];\n      if (isArray(item)) {\n        result = result.concat(flatten(item));\n      } else {\n        result.push(item);\n      }\n    }\n    return result;\n  }\n  O.flatten = flatten;\n\n  // #### [indexOf](#index-of)\n  //\n  // Emulates (IE<9) or calls native `Array.prototype.indexOf`.\n\n  function indexOf(array, target, startIndex) {\n    var n, i, l;\n    if (array == null) return -1;\n    if ((n = __native('indexOf', array, target)) !== NIL) return n;\n    for (i = startIndex || 0, l = array.length; i < l; i++) {\n      if (i in array && array[i] === target) return i;\n    }\n    return -1;\n  }\n  O.indexOf = indexOf;\n\n  // #### [unique](#unique)\n  //\n  // Returns a copy of `array` with any duplicate elements removed.\n\n  function unique(array) {\n    var result, i, l, item;\n    if (!array) return [];\n    result = [];\n    for (i = 0, l = array.length; i < l; i++) {\n      item = array[i];\n      ~indexOf(result, item) || result.push(item);\n    }\n    return result;\n  }\n  O.unique = O.uniq = unique;\n\n  // #### [keys](#keys)\n  //\n  // Returns an array containing the enumerable keys of an object.\n  //\n  // > Requires: `hasOwn`\n\n  function keys(obj) {\n    if (obj == null || typeof obj !== 'object' && typeof obj !== 'function') {\n      throw new TypeError();\n    }\n    var key,\n      result = [];\n    for (key in obj) if (hasOwn.call(obj, key)) result.push(key);\n    return result;\n  }\n  O.keys = typeof Object.keys === 'function' ? keys = Object.keys : keys;\n\n  // #### [invert](#invert)\n  //\n  // Returns an object that is the key-value inversion of the supplied string\n  // array.\n  //\n  // > Requires: `hasOwn`, `isArray`\n\n  function invert(obj) {\n    var i,\n      l,\n      map = {};\n    if (isArray(obj)) {\n      for (i = 0, l = obj.length; i < l; i++) map['' + obj[i]] = i;\n    } else {\n      for (i in obj) if (hasOwn.call(obj, i)) map['' + obj[i]] = i;\n    }\n    return map;\n  }\n  O.invert = invert;\n\n  // #### [alias](#alias)\n  //\n  // Copies the values of members of an object to one or more different keys on\n  // that same object.\n\n  function alias(object, map) {\n    var key, value, names, i, l;\n    for (key in map) if (key in object) {\n      names = map[key].split(/\\s+/);\n      for (i = 0, l = names.length; i < l; i++) {\n        object[names[i]] = object[key];\n      }\n    }\n    return object;\n  }\n  O.alias = alias;\n\n  // #### [thunk](#thunk)\n  //\n  // Creates and returns a lazy evaluator, a function that returns the enclosed\n  // argument.\n\n  function thunk(obj) {\n    return function () {\n      return obj;\n    };\n  }\n  O.thunk = thunk;\n\n  // #### [has](#has)\n  //\n  // Returns a boolean that verifies the existence of a key, indicated by the\n  // provided `path` string, within a nested object `obj`.\n  //\n  //      var x = { a: { b: 42 } };\n  //      has( x, 'a' );        // true\n  //      has( x, 'a.b' );      // true\n  //      has( x, 'a.b.c' );    // false\n  //\n  // > See also: [lookup](#lookup)\n  //\n  // > Requires: `hasOwn`\n\n  function has(obj, path, separator, ownProperty) {\n    var i, l, name;\n    if (obj == null || typeof path !== 'string') return false;\n    if (typeof separator === 'boolean' && arguments.length < 4) {\n      ownProperty = separator;\n      separator = undefined;\n    }\n    separator || (separator = '.');\n    if (!~path.indexOf(separator)) {\n      return ownProperty ? hasOwn.call(obj, path) : path in obj;\n    }\n    path = path.split(separator);\n    for (i = 0, l = path.length; i < l && obj != null; i++) {\n      if (typeof obj !== 'object' && typeof obj !== 'function') {\n        return false;\n      }\n      name = path[i];\n      if (ownProperty && !hasOwn.call(obj, name)) return false;\n      if (i === l - 1) return name in obj;\n      obj = obj[name];\n    }\n    return false;\n  }\n  O.has = has;\n\n  // #### [lookup](#lookup)\n  //\n  // Retrieves the value at the location indicated by the provided `path` string\n  // inside a nested object `obj`. For example:\n  //\n  //      var x = { a: { b: 42 } };\n  //      lookup( x, 'a' );        // { \"b\": 42 }\n  //      lookup( x, 'a.b' );      // 42\n  //      lookup( x, 'a.b.c' );    // undefined\n  //\n  // > Requires: `hasOwn`\n\n  function lookup(obj, path, separator, ownProperty) {\n    var i, l, name;\n    if (obj == null || typeof path !== 'string') return;\n    if (typeof separator === 'boolean' && arguments.length < 4) {\n      ownProperty = separator;\n      separator = undefined;\n    }\n    path = path.split(separator || '.');\n    for (i = 0, l = path.length; i < l && obj != null; i++) {\n      if (typeof obj !== 'object' && typeof obj !== 'function') return;\n      name = path[i];\n      if (ownProperty && !hasOwn.call(obj, name)) return;\n      obj = obj[name];\n    }\n    return obj;\n  }\n  O.lookup = lookup;\n\n  // #### [create](#create)\n  //\n  // Reference to or partial shim for `Object.create`.\n\n  var create = function () {\n    function constructor() {}\n    return function (prototype) {\n      constructor.prototype = prototype;\n      var object = new constructor();\n      object.__proto__ = prototype;\n      object.constructor = prototype.constructor;\n      return object;\n    };\n  }();\n  O.create = Object.create ? create = Object.create : create;\n\n  // #### [inherit](#inherit)\n  //\n  // Facilitates prototypal inheritance between a `child` constructor and a\n  // `parent` constructor.\n  //\n  // * `child` and `parent` are constructor functions, such that\n  //       `new child instanceof parent === true`\n  // * `child` inherits static properties of `parent` as its own static members\n  // * `properties` is an optional object containing properties to be added to\n  //       the prototype of `child`\n  // * `statics` is an optional object containing properties to be added to\n  //       `child` itself.\n  //\n  // > Requires: `edit`, `create`\n\n  function inherit(child, parent, properties, statics) {\n    if (typeof parent === 'function') {\n      (edit(child, parent).prototype = create(parent.prototype)).constructor = child;\n    } else {\n      statics = properties;\n      properties = parent;\n    }\n    properties && edit(child.prototype, properties);\n    statics && edit(child, statics);\n    return child;\n  }\n  O.inherit = inherit;\n\n  // #### [getPrototypeOf](#get-prototype-of)\n  //\n  // Returns an object’s prototype. In environments without native support, this\n  // may only work if the object’s constructor and its prototype are properly\n  // associated, e.g., as facilitated by the `create` function.\n  function getPrototypeOf(obj) {\n    return obj.__proto__ || obj.constructor.prototype;\n  }\n  O.getPrototypeOf = typeof Object.getPrototypeOf === 'function' ? Object.getPrototypeOf : getPrototypeOf;\n\n  // #### [randomHex](#random-hex)\n  //\n  // Returns a random hex string of arbitrary `length`, generated as a\n  // concatenation of 32-bit (eight-character) chunks.\n  function randomHex(length) {\n    if (length === 0) return '';\n    if (length == null) length = 8;\n    if (!(0 < length && length < Infinity)) throw RangeError;\n    var random = Math.random;\n    var i = 0;\n    var n = 1 + (length - 1 >> 3) | 0;\n    var result = '';\n    while (i++ < n) {\n      result += (random().toString(16) + '00000000').slice(2, 10);\n    }\n    return length | -8 ? result.slice(0, length) : result;\n  }\n  O.randomHex = randomHex;\n\n  //\n  O.env.server && (module.exports = O);\n  O.env.client && (global['O'] = O);\n})();","map":{"version":3,"names":["undefined","global","O","VERSION","env","server","module","require","exports","client","window","debug","NIL","toString","Object","prototype","hasOwn","hasOwnProperty","trim","String","text","call","replace","slice","Array","noConflict","original","noop","getThis","__native","item","obj","n","fn","apply","arguments","forEach","indexOf","type","map","types","split","name","toLowerCase","isNumber","isFinite","isNaN","parseFloat","isArray","isError","e","isPlainObject","key","nodeType","constructor","isEmpty","andPrototype","length","isEqual","subject","object","edit","context","l","k","i","each","t","flags","flagsString","subjectIsArray","deltas","delta","value","valueIsArray","source","target","clone","result","deep","assign","push","own","all","immutable","absolute","extend","concat","diff","separator","argLen","valuesMirrorKeys","list","flatten","array","startIndex","unique","uniq","keys","TypeError","invert","alias","names","thunk","has","path","ownProperty","lookup","create","__proto__","inherit","child","parent","properties","statics","getPrototypeOf","randomHex","Infinity","RangeError","random","Math"],"sources":["C:/Users/Admin/Documents/GitHub/test_unipos_project/webapp/node_modules/omicron/omicron.js"],"sourcesContent":["// Copyright (C) 2011-2013\n// Nick Fargo, Z Vector Inc.\n//\n// [`LICENSE`](https://github.com/nickfargo/omicron/blob/master/LICENSE) MIT.\n//\n// Omicron (**“O”**) is a small JavaScript library of functions and tools that\n// assist with:\n//\n// * Object manipulation and differential operations\n// * Prototypal inheritance\n// * Selected general tasks: safe typing, functional iteration, etc.\n//\n// [omicronjs.org](http://omicronjs.org/)\n//\n// <a class=\"icon-large icon-octocat\"\n//    href=\"http://github.com/nickfargo/omicron/\"></a>\n\n;( function ( undefined ) {\n\nvar global = this;\n\nvar O = {\n  VERSION: '0.2.0',\n  env: {\n    server: typeof module !== 'undefined' &&\n            typeof require !== 'undefined' &&\n            !!module.exports,\n    client: typeof window !== 'undefined' && window === global,\n    debug:  false\n  }\n};\n\n\n// #### [NIL](#nil)\n//\n// Unique object reference. Used by [`edit`](#edit) and the related\n// differential operation functions, where an object with a property whose\n// value is set to `NIL` indicates the absence or deletion of the\n// corresponding property on an associated operand.\nvar NIL = O.NIL = ( function () { function NIL () {} return new NIL; }() );\n\n\n// #### [toString](#to-string)\n//\nvar toString = O.toString =\n  Object.prototype.toString;\n\n\n// #### [hasOwn](#has-own)\n//\nvar hasOwn = O.hasOwn =\n  Object.prototype.hasOwnProperty;\n\n\n// #### [trim](#trim)\n//\nvar trim = O.trim =\n  String.prototype.trim ?\n    function ( text ) {\n      return text == null ? '' : String.prototype.trim.call( text );\n    } :\n    function ( text ) {\n      return text == null ?\n        '' :\n        text.toString()\n          .replace( /^\\s+/, '' )\n          .replace( /\\s+$/, '' );\n    };\n\n\n// #### [slice](#slice)\n//\nvar slice = O.slice =\n  Array.prototype.slice;\n\n\n// #### [noConflict](#no-conflict)\n//\nO.noConflict = ( function () {\n  var original = global.O;\n  return function () {\n    global.O = original;\n    return this;\n  };\n}() );\n\n\n// #### [noop](#noop)\n//\n// General-purpose empty function.\n\nfunction noop () {}\nO.noop = noop;\n\n\n// #### [getThis](#get-this)\n//\n// Like [`noop`](#noop), except suited for substitution on methods that would\n// normally return their context object.\n\nfunction getThis () { return this; }\nO.getThis = getThis;\n\n\n// Calls the specified native function if it exists and returns its result; if\n// no such function exists on `obj` as registered in `__native.fn`, the unique\n// [`NIL`](#nil) is returned (as opposed to `null` or `undefined`, either of\n// which may be a valid result from the native function itself).\n\nfunction __native ( item, obj /* , ... */ ) {\n  var n = __native.fn[ item ];\n  return n && obj[ item ] === n ?\n    n.apply( obj, slice.call( arguments, 2 ) ) :\n    NIL;\n}\n__native.fn = {\n  forEach: Array.prototype.forEach,\n  indexOf: Array.prototype.indexOf\n};\n\n\n// #### [type](#type)\n//\n// A browser-safe universal alternative to `typeof` that checks against\n// `Object.prototype.toString`.\n\nvar type = ( function () {\n  var map = {};\n  var types = 'Arguments Array Boolean Date Error Function Number Object \\\n               RegExp String';\n  forEach( types.split(/\\s+/), function ( name ) {\n    map[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n  });\n  function type ( obj ) {\n    if ( obj == null ) return String( obj );\n    return map[ toString.call( obj ) ] || 'object';\n  }\n  return type;\n}() );\nO.type = type;\n\n\n// #### [isNumber](#is-number)\n\nfunction isNumber ( n ) {\n  return isFinite( n ) && !isNaN( parseFloat( n ) );\n}\nO.isNumber = isNumber;\n\n\n// #### [isArray](#is-array)\n//\n// > Requires: `toString`\n\nfunction isArray ( obj ) {\n  return toString.call( obj ) === '[object Array]';\n}\nO.isArray = isArray;\n\n\n// #### [isError](#is-error)\n//\n// > Requires: `toString`\n\nfunction isError ( e ) {\n  return typeof e === 'object' && toString.call( e ) === '[object Error]';\n}\nO.isError = isError;\n\n\n// #### [isPlainObject](#is-plain-object)\n//\n// Near-straight port of jQuery `isPlainObject`.\n//\n// > Requires: `type`, `hasOwn`\n\nfunction isPlainObject ( obj ) {\n  var key;\n  if ( !obj || type( obj ) !== 'object' || obj.nodeType || obj === global ||\n    obj.constructor &&\n    !hasOwn.call( obj, 'constructor' ) &&\n    !hasOwn.call( obj.constructor.prototype, 'isPrototypeOf' )\n  ) {\n    return false;\n  }\n  for ( key in obj ) {}\n  return key === undefined || hasOwn.call( obj, key );\n}\nO.isPlainObject = isPlainObject;\n\n\n// #### [isEmpty](#is-empty)\n//\n// Returns a boolean indicating whether the object or array at `obj` contains\n// any members. For an `Object` type, if `andPrototype` is included and truthy,\n// `obj` must be empty throughout its prototype chain as well.\n//\n// > Requires: `isArray`, `hasOwn`\n\nfunction isEmpty ( obj, andPrototype ) {\n  var key;\n  if ( isArray( obj ) && obj.length ) return false;\n  for ( key in obj ) if ( andPrototype || hasOwn.call( obj, key ) ) {\n    return false;\n  }\n  return true;\n}\nO.isEmpty = isEmpty;\n\n\n// #### [isEqual](#is-equal)\n//\n// Performs a deep equality test.\n//\n// > Requires: `edit`, `isEmpty`\n\nfunction isEqual ( subject, object ) {\n  return subject === object ||\n    isEmpty( edit(\n      'deep all absolute immutable delta', subject, object || {}\n    ));\n}\nO.isEqual = isEqual;\n\n\n// #### [forEach](#for-each)\n//\n// Functional iterator with ES5-style callback signature of\n// `value, key, object`.\n\nfunction forEach ( obj, fn, context ) {\n  var n, l, k, i;\n  if ( obj == null ) return;\n  if ( ( n = __native( 'forEach', obj, fn, context ) ) !== NIL ) return n;\n  if ( ( l = obj.length ) === undefined || typeof obj === 'function' ) {\n    for ( k in obj ) {\n      if ( fn.call( context || obj[k], obj[k], k, obj ) === false ) {\n        break;\n      }\n    }\n  } else {\n    for ( i = 0, l = obj.length; i < l; ) {\n      if ( fn.call( context || obj[i], obj[i], i++, obj ) === false ) {\n        break;\n      }\n    }\n  }\n  return obj;\n}\nO.forEach = O.each = forEach;\n\n\n// #### [edit](#edit)\n//\n// Performs a differential operation across multiple objects.\n//\n// By default, `edit` returns the first object-typed argument as `subject`, to\n// which each subsequent `source` argument is copied in order. Optionally the\n// first argument may be either a Boolean `deep`, or a whitespace-delimited\n// `flags` String containing any of the following keywords:\n//\n// * `deep` : If a `source` property is an object or array, a structured clone\n//      is created on `subject`.\n//\n// * `own` : Excludes `source` properties filtered by `Object.hasOwnProperty`.\n//\n// * `all` : Includes `source` properties with values of `NIL` or `undefined`.\n//\n// * `delta` : Returns the **delta**, a structured object that reflects the\n//      changes made to the properties of `subject`. If multiple object\n//      arguments are provided, an array of deltas is returned. (Applying the\n//      deltas in reverse order in an `edit('deep')` on `subject` would revert\n//      the contents of `subject` to their original state.)\n//\n// * `immutable` : Leaves `subject` unchanged. Useful, for example, in\n//      combination with flags `delta` and `absolute` for non-destructively\n//      computing a differential between `source` and `subject`.\n//\n// * `absolute` : By default an edit operation is *relative*, in that the\n//      properties of `subject` affected by the operation are limited to those\n//      also present within each `source`. By including the `absolute` flag,\n//      properties in `subject` that are *not* also present within each\n//      `source` will be deleted from `subject`, and will also affect any\n//      returned delta accordingly.\n//\n// Contains techniques and influences from the deep-cloning procedure of\n// `jQuery.extend`, with which `edit` also retains a compatible interface.\n//\n// > See also: [`clone`](#clone), [`delta`](#delta), [`diff`](#diff),\n// [`assign`](#assign)\nfunction edit () {\n  var i, l, t, flags, flagsString, subject, subjectIsArray, deltas, delta,\n    key, value, valueIsArray, source, target, clone, result;\n\n  i = 0; l = arguments.length;\n  t = type( arguments[0] );\n\n  if ( t === 'boolean' ) {\n    flagsString = 'deep';\n    flags = { deep: flagsString };\n    i += 1;\n  } else if ( t === 'string' ) {\n    flagsString = arguments[i];\n    flags = assign( flagsString );\n    i += 1;\n  } else {\n    flags = NIL;\n  }\n\n  subject = arguments[i] || {};\n  i += 1;\n  if ( typeof subject !== 'object' && typeof subject !== 'function' ) {\n    subject = {};\n  }\n  subjectIsArray = isArray( subject );\n\n  flags.delta && l - 1 > i && ( deltas = [] );\n\n  for ( ; i < l; i++ ) {\n    flags.delta && ( delta = subjectIsArray ? [] : {} );\n    deltas && deltas.push( delta );\n    source = arguments[i];\n\n    if ( source == null ) continue;\n\n    for ( key in source ) if ( !flags.own || hasOwn.call( source, key ) ) {\n      value = source[ key ];\n      if ( value === subject ) continue;\n      if ( value === NIL && !flags.all ) {\n        delta && ( delta[ key ] = subject[ key ] );\n        flags.immutable || delete subject[ key ];\n      }\n      else if ( flags.deep && value && ( isPlainObject( value ) ||\n        ( valueIsArray = isArray( value ) ) )\n      ) {\n        target = subject[ key ];\n        if ( valueIsArray ) {\n          valueIsArray = false;\n          clone = target && isArray( target ) ?\n            target :\n            [];\n        } else {\n          clone = target && ( typeof target === 'object' ||\n            typeof target === 'function' ) ? target : {};\n        }\n        result = edit( flagsString, clone, value );\n        if ( delta ) {\n          if ( hasOwn.call( subject, key ) ) {\n            if ( result && !isEmpty( result ) ) {\n              delta[ key ] = result;\n            }\n          } else {\n            delta[ key ] = NIL;\n          }\n        }\n        flags.immutable || ( subject[ key ] = clone );\n      }\n      else if ( ( value !== undefined || flags.all ) &&\n        ( !hasOwn.call( subject, key ) || subject[ key ] !== value )\n      ) {\n        if ( delta ) {\n          delta[ key ] = hasOwn.call( subject, key ) ?\n            subject[ key ] :\n            NIL;\n        }\n        flags.immutable || ( subject[ key ] = value );\n      }\n    }\n    if ( flags.absolute && ( flags.delta || !flags.immutable ) ) {\n      for ( key in subject ) if ( hasOwn.call( subject, key ) ) {\n        if ( !( flags.own ?\n              hasOwn.call( source, key ) :\n              key in source )\n        ) {\n          delta && ( delta[ key ] = subject[ key ] );\n          flags.immutable || delete subject[ key ];\n        }\n      }\n    }\n  }\n  return deltas || delta || subject;\n}\nO.edit = O.extend = edit;\n\n\n// #### [clone](#clone)\n//\n// Specialization of [`edit`](#edit).\n//\n// > Requires: `edit`, `isArray`\n\nfunction clone () {\n  return edit.apply( O, [ 'deep all', isArray( arguments[0] ) ? [] : {} ]\n    .concat( slice.call( arguments ) ) );\n}\nO.clone = clone;\n\n\n// #### [delta](#delta)\n//\n// Specialization of [`edit`](#edit) that applies changes defined in `source`\n// to `subject`, and returns the **anti-delta**: a structured map containing\n// the properties of `subject` displaced by the operation. Previously\n// nonexistent properties are recorded as [`NIL`](#nil) in the anti-delta.\n// The prior condition of `subject` can be restored in a single transaction\n// by immediately providing this anti-delta object as the `source` argument in\n// a subsequent `edit` operation upon `subject`.\n//\n// > Requires: `edit`\n\nfunction delta () {\n  return edit.apply( O, [ 'deep delta' ]\n    .concat( slice.call( arguments ) ) );\n}\nO.delta = delta;\n\n\n// #### [diff](#diff)\n//\n// Specialization of [`edit`](#edit) that returns the delta between the\n// provided `subject` and `source`. Operates similarly to [`delta`] except no\n// changes are made to `subject`, and `source` is evaluated absolutely rather\n// than applied relatively.\n//\n// > Requires: `edit`\n\nfunction diff () {\n  return edit.apply( O, [ 'deep delta immutable absolute' ]\n    .concat( slice.call( arguments ) ) );\n}\nO.diff = diff;\n\n\n// #### [assign](#assign)\n//\n// Facilitates one or more assignments of a value to one or more keys of an\n// object.\n//\n// > Requires: `NIL`, `hasOwn`\n\nfunction assign ( target, map, value, separator ) {\n  var argLen, valuesMirrorKeys, key, list, i, l;\n\n  argLen = arguments.length;\n  if ( typeof target === 'string' ) {\n    valuesMirrorKeys = argLen === 1;\n    value = map; map = target; target = {};\n  } else {\n    if ( typeof map === 'string' ) {\n      if ( argLen === 2 ) {\n        valuesMirrorKeys = true;\n      } else {\n        // `value` is present, and `map` is a key or \"deep key\";\n        // do `lookup`-style assignment\n        list = map.split( separator || '.' );\n        for ( i = 0, l = list.length; i < l; i++ ) {\n\n          // To proceed `target` must be an `Object`.\n          if ( target == null || typeof target !== 'object' &&\n            typeof target !== 'function' ) return;\n\n          key = list[i];\n\n          // If at the end of the deep-key, assign/delete and return.\n          // For deletions, return `NIL` to indicate a `true` result\n          // from the `delete` operator.\n          if ( i === l - 1 ) {\n            if ( value === NIL ) {\n              return delete target[ key ] ? NIL : undefined;\n            } else {\n              return target[ key ] = value;\n            }\n          }\n\n          // Advance `target` to the next level. If nothing is there\n          // already, then: for an assignment, create a new object in\n          // place and continue; for a deletion, return `NIL`\n          // immediately to reflect what would have been a `true`\n          // result from the `delete` operator.\n          if ( hasOwn.call( target, key ) ) {\n            target = target[ key ];\n          } else {\n            if ( value === NIL ) return NIL;\n            target = target[ key ] = {};\n          }\n        }\n      }\n    }\n    else if ( map === undefined ) {\n      map = target; target = {};\n    }\n  }\n  if ( typeof map === 'string' ) {\n    key = map; ( map = {} )[ key ] = value;\n  }\n\n  for ( key in map ) if ( hasOwn.call( map, key ) ) {\n    list = key.split(/\\s+/);\n    if ( valuesMirrorKeys ) {\n      for ( i = 0, l = list.length; i < l; i++ ) {\n        value = list[i];\n        target[ value ] = value;\n      }\n    } else {\n      value = map[ key ];\n      for ( i = 0, l = list.length; i < l; i++ ) {\n        target[ list[i] ] = value;\n      }\n    }\n  }\n\n  return target;\n}\nO.assign = assign;\n\n\n// #### [flatten](#flatten)\n//\n// Extracts elements of nested arrays into a single flat array.\n//\n// > Requires: `isArray`\n\nfunction flatten ( array ) {\n  if ( !isArray( array ) ) array = [ array ];\n  var i = 0;\n  var l = array.length;\n  var item;\n  var result = [];\n  while ( i < l ) {\n    item = array[ i++ ];\n    if ( isArray( item ) ) {\n      result = result.concat( flatten( item ) );\n    } else {\n      result.push( item );\n    }\n  }\n  return result;\n}\nO.flatten = flatten;\n\n\n// #### [indexOf](#index-of)\n//\n// Emulates (IE<9) or calls native `Array.prototype.indexOf`.\n\nfunction indexOf ( array, target, startIndex ) {\n  var n, i, l;\n  if ( array == null ) return -1;\n  if ( ( n = __native( 'indexOf', array, target ) ) !== NIL ) return n;\n  for ( i = startIndex || 0, l = array.length; i < l; i++ ) {\n    if ( i in array && array[i] === target ) return i;\n  }\n  return -1;\n}\nO.indexOf = indexOf;\n\n\n// #### [unique](#unique)\n//\n// Returns a copy of `array` with any duplicate elements removed.\n\nfunction unique ( array ) {\n  var result, i, l, item;\n  if ( !array ) return [];\n  result = [];\n  for ( i = 0, l = array.length; i < l; i++ ) {\n    item = array[i];\n    ~indexOf( result, item ) || result.push( item );\n  }\n  return result;\n}\nO.unique = O.uniq = unique;\n\n\n// #### [keys](#keys)\n//\n// Returns an array containing the enumerable keys of an object.\n//\n// > Requires: `hasOwn`\n\nfunction keys ( obj ) {\n  if ( obj == null || typeof obj !== 'object' && typeof obj !== 'function' ) {\n    throw new TypeError;\n  }\n  var key, result = [];\n  for ( key in obj ) if ( hasOwn.call( obj, key ) ) result.push( key );\n  return result;\n}\nO.keys = typeof Object.keys === 'function' ? ( keys = Object.keys ) : keys;\n\n\n// #### [invert](#invert)\n//\n// Returns an object that is the key-value inversion of the supplied string\n// array.\n//\n// > Requires: `hasOwn`, `isArray`\n\nfunction invert ( obj ) {\n  var i, l, map = {};\n  if ( isArray( obj ) ) {\n    for ( i = 0, l = obj.length; i < l; i++ ) map[ ''+obj[i] ] = i;\n  } else {\n    for ( i in obj ) if ( hasOwn.call( obj, i ) ) map[ ''+obj[i] ] = i;\n  }\n  return map;\n}\nO.invert = invert;\n\n\n// #### [alias](#alias)\n//\n// Copies the values of members of an object to one or more different keys on\n// that same object.\n\nfunction alias ( object, map ) {\n  var key, value, names, i, l;\n  for ( key in map ) if ( key in object ) {\n    names = map[ key ].split(/\\s+/);\n    for ( i = 0, l = names.length; i < l; i++ ) {\n      object[ names[i] ] = object[ key ];\n    }\n  }\n  return object;\n}\nO.alias = alias;\n\n\n// #### [thunk](#thunk)\n//\n// Creates and returns a lazy evaluator, a function that returns the enclosed\n// argument.\n\nfunction thunk ( obj ) {\n  return function () { return obj; };\n}\nO.thunk = thunk;\n\n\n// #### [has](#has)\n//\n// Returns a boolean that verifies the existence of a key, indicated by the\n// provided `path` string, within a nested object `obj`.\n//\n//      var x = { a: { b: 42 } };\n//      has( x, 'a' );        // true\n//      has( x, 'a.b' );      // true\n//      has( x, 'a.b.c' );    // false\n//\n// > See also: [lookup](#lookup)\n//\n// > Requires: `hasOwn`\n\nfunction has ( obj, path, separator, ownProperty ) {\n  var i, l, name;\n\n  if ( obj == null || typeof path !== 'string' ) return false;\n  if ( typeof separator === 'boolean' && arguments.length < 4 ) {\n    ownProperty = separator; separator = undefined;\n  }\n\n  separator || ( separator = '.' );\n  if ( !~path.indexOf( separator ) ) {\n    return ownProperty ? hasOwn.call( obj, path ) : path in obj;\n  }\n\n  path = path.split( separator );\n  for ( i = 0, l = path.length; i < l && obj != null; i++ ) {\n    if ( typeof obj !== 'object' && typeof obj !== 'function' ) {\n      return false;\n    }\n    name = path[i];\n    if ( ownProperty && !hasOwn.call( obj, name ) ) return false;\n    if ( i === l - 1 ) return name in obj;\n    obj = obj[ name ];\n  }\n  return false;\n}\nO.has = has;\n\n\n// #### [lookup](#lookup)\n//\n// Retrieves the value at the location indicated by the provided `path` string\n// inside a nested object `obj`. For example:\n//\n//      var x = { a: { b: 42 } };\n//      lookup( x, 'a' );        // { \"b\": 42 }\n//      lookup( x, 'a.b' );      // 42\n//      lookup( x, 'a.b.c' );    // undefined\n//\n// > Requires: `hasOwn`\n\nfunction lookup ( obj, path, separator, ownProperty ) {\n  var i, l, name;\n\n  if ( obj == null || typeof path !== 'string' ) return;\n  if ( typeof separator === 'boolean' && arguments.length < 4 ) {\n    ownProperty = separator; separator = undefined;\n  }\n  path = path.split( separator || '.' );\n  for ( i = 0, l = path.length; i < l && obj != null; i++ ) {\n    if ( typeof obj !== 'object' && typeof obj !== 'function' ) return;\n    name = path[i];\n    if ( ownProperty && !hasOwn.call( obj, name ) ) return;\n    obj = obj[ name ];\n  }\n  return obj;\n}\nO.lookup = lookup;\n\n\n// #### [create](#create)\n//\n// Reference to or partial shim for `Object.create`.\n\nvar create = ( function () {\n  function constructor () {}\n  return function ( prototype ) {\n    constructor.prototype = prototype;\n    var object = new constructor;\n    object.__proto__ = prototype;\n    object.constructor = prototype.constructor;\n    return object;\n  };\n}() );\nO.create = Object.create? ( create = Object.create ) : create;\n\n\n// #### [inherit](#inherit)\n//\n// Facilitates prototypal inheritance between a `child` constructor and a\n// `parent` constructor.\n//\n// * `child` and `parent` are constructor functions, such that\n//       `new child instanceof parent === true`\n// * `child` inherits static properties of `parent` as its own static members\n// * `properties` is an optional object containing properties to be added to\n//       the prototype of `child`\n// * `statics` is an optional object containing properties to be added to\n//       `child` itself.\n//\n// > Requires: `edit`, `create`\n\nfunction inherit ( child, parent, properties, statics ) {\n  if ( typeof parent === 'function' ) {\n    ( edit( child, parent ).prototype = create( parent.prototype ) )\n      .constructor = child;\n  } else {\n    statics = properties; properties = parent;\n  }\n  properties && edit( child.prototype, properties );\n  statics && edit( child, statics );\n  return child;\n}\nO.inherit = inherit;\n\n\n// #### [getPrototypeOf](#get-prototype-of)\n//\n// Returns an object’s prototype. In environments without native support, this\n// may only work if the object’s constructor and its prototype are properly\n// associated, e.g., as facilitated by the `create` function.\nfunction getPrototypeOf ( obj ) {\n  return obj.__proto__ || obj.constructor.prototype;\n}\nO.getPrototypeOf = typeof Object.getPrototypeOf === 'function' ?\n  Object.getPrototypeOf : getPrototypeOf;\n\n\n// #### [randomHex](#random-hex)\n//\n// Returns a random hex string of arbitrary `length`, generated as a\n// concatenation of 32-bit (eight-character) chunks.\nfunction randomHex ( length ) {\n  if ( length === 0 ) return '';\n  if ( length == null ) length = 8;\n  if ( !( ( 0 < length && length < Infinity ) ) ) throw RangeError;\n  var random = Math.random;\n  var i = 0;\n  var n = 1 + ( ( length - 1 ) >> 3 )|0;\n  var result = '';\n  while ( i++ < n ) {\n    result += ( random().toString(16) + '00000000' ).slice( 2, 10 );\n  }\n  return length | -8 ? result.slice( 0, length ) : result;\n}\nO.randomHex = randomHex;\n\n//\nO.env.server && ( module.exports = O );\nO.env.client && ( global['O'] = O );\n\n}() );\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}