{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minh Khoa\\\\Desktop\\\\clone\\\\test_unipos_project\\\\webadmin\\\\src\\\\pages\\\\AllCharts\\\\chartjs\\\\barchart.js\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BarChart extends Component {\n  render() {\n    const data = {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n      datasets: [{\n        label: \"Sales Analytics\",\n        backgroundColor: \"#02a499\",\n        borderColor: \"#02a499\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"#02a499\",\n        hoverBorderColor: \"#02a499\",\n        data: [65, 59, 81, 45, 56, 80, 50, 20]\n      }]\n    };\n    const option = {\n      tootlbar: {\n        show: false\n      },\n      tooltips: {\n        callbacks: {\n          label: function (tooltipItem, data) {\n            var dataset = data.datasets[tooltipItem.datasetIndex];\n\n            var meta = dataset._meta[Object.keys(dataset._meta)[0]];\n\n            var total = meta.total;\n            var currentValue = dataset.data[tooltipItem.index];\n            var percentage = parseFloat((currentValue / total * 100).toFixed(1));\n            return currentValue + ' (' + percentage + '%)';\n          },\n          title: function (tooltipItem, data) {\n            return data.labels[tooltipItem[0].index];\n          }\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        width: 600,\n        height: 245,\n        data: data,\n        options: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["C:/Users/Minh Khoa/Desktop/clone/test_unipos_project/webadmin/src/pages/AllCharts/chartjs/barchart.js"],"names":["React","Component","Bar","BarChart","render","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","option","tootlbar","show","tooltips","callbacks","tooltipItem","dataset","datasetIndex","meta","_meta","Object","keys","total","currentValue","index","percentage","parseFloat","toFixed","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAE7BG,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADC;AAETC,MAAAA,QAAQ,EAAE,CACN;AACIC,QAAAA,KAAK,EAAE,iBADX;AAEIC,QAAAA,eAAe,EAAE,SAFrB;AAGIC,QAAAA,WAAW,EAAE,SAHjB;AAIIC,QAAAA,WAAW,EAAE,CAJjB;AAKIC,QAAAA,oBAAoB,EAAE,SAL1B;AAMIC,QAAAA,gBAAgB,EAAE,SANtB;AAOIR,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B;AAPV,OADM;AAFD,KAAb;AAeA,UAAMS,MAAM,GAAG;AACXC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA,OADC;AAIXC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,SAAS,EAAE;AACPV,UAAAA,KAAK,EAAE,UAAUW,WAAV,EAAuBd,IAAvB,EAA6B;AAChC,gBAAIe,OAAO,GAAGf,IAAI,CAACE,QAAL,CAAcY,WAAW,CAACE,YAA1B,CAAd;;AACA,gBAAIC,IAAI,GAAGF,OAAO,CAACG,KAAR,CAAcC,MAAM,CAACC,IAAP,CAAYL,OAAO,CAACG,KAApB,EAA2B,CAA3B,CAAd,CAAX;;AACA,gBAAIG,KAAK,GAAGJ,IAAI,CAACI,KAAjB;AACA,gBAAIC,YAAY,GAAGP,OAAO,CAACf,IAAR,CAAac,WAAW,CAACS,KAAzB,CAAnB;AACA,gBAAIC,UAAU,GAAGC,UAAU,CAAC,CAACH,YAAY,GAAGD,KAAf,GAAuB,GAAxB,EAA6BK,OAA7B,CAAqC,CAArC,CAAD,CAA3B;AACA,mBAAOJ,YAAY,GAAG,IAAf,GAAsBE,UAAtB,GAAmC,IAA1C;AACH,WARM;AASPG,UAAAA,KAAK,EAAE,UAAUb,WAAV,EAAuBd,IAAvB,EAA6B;AAChC,mBAAOA,IAAI,CAACC,MAAL,CAAYa,WAAW,CAAC,CAAD,CAAX,CAAeS,KAA3B,CAAP;AACH;AAXM;AADL;AAJC,KAAf;AAqBA,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE,GAAZ;AAAiB,QAAA,MAAM,EAAE,GAAzB;AAA8B,QAAA,IAAI,EAAEvB,IAApC;AAA0C,QAAA,OAAO,EAAES;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA5C4B;;AA+CjC,eAAeX,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nclass BarChart extends Component {\r\n\r\n    render() {\r\n        const data = {\r\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n            datasets: [\r\n                {\r\n                    label: \"Sales Analytics\",\r\n                    backgroundColor: \"#02a499\",\r\n                    borderColor: \"#02a499\",\r\n                    borderWidth: 1,\r\n                    hoverBackgroundColor: \"#02a499\",\r\n                    hoverBorderColor: \"#02a499\",\r\n                    data: [65, 59, 81, 45, 56, 80, 50, 20]\r\n                }\r\n            ]\r\n        };\r\n\r\n        const option = {\r\n            tootlbar: {\r\n                show: false\r\n            },\r\n            tooltips: {\r\n                callbacks: {\r\n                    label: function (tooltipItem, data) {\r\n                        var dataset = data.datasets[tooltipItem.datasetIndex];\r\n                        var meta = dataset._meta[Object.keys(dataset._meta)[0]];\r\n                        var total = meta.total;\r\n                        var currentValue = dataset.data[tooltipItem.index];\r\n                        var percentage = parseFloat((currentValue / total * 100).toFixed(1));\r\n                        return currentValue + ' (' + percentage + '%)';\r\n                    },\r\n                    title: function (tooltipItem, data) {\r\n                        return data.labels[tooltipItem[0].index];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Bar width={600} height={245} data={data} options={option} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BarChart;   "]},"metadata":{},"sourceType":"module"}