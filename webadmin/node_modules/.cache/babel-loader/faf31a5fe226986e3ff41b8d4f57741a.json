{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minh Khoa\\\\Desktop\\\\clone\\\\test_unipos_project\\\\webadmin\\\\src\\\\pages\\\\AllCharts\\\\echart\\\\gaugechart.js\";\nimport React, { Component } from 'react';\nimport cloneDeep from 'lodash.clonedeep';\nimport ReactEcharts from 'echarts-for-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Guage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getOption = () => {\n      return {\n        tooltip: {\n          formatter: \"{a} <br/>{b} : {c}%\"\n        },\n        toolbox: {\n          feature: {\n            restore: {},\n            saveAsImage: {}\n          }\n        },\n        series: [{\n          name: 'Business indicator',\n          type: 'gauge',\n          detail: {\n            formatter: '{value}%'\n          },\n          axisLine: {\n            lineStyle: {\n              color: [[0.2, '#02a499'], [0.8, '#3c4ccf'], [1, '#ec4561']],\n              width: 20\n            }\n          },\n          data: [{\n            value: 50,\n            name: 'Completion rate'\n          }]\n        }]\n      };\n    };\n\n    this.timeTicket = null;\n\n    this.getInitialState = () => ({\n      option: this.getOption()\n    });\n\n    this.state = this.getInitialState();\n  }\n\n  componentDidMount() {\n    if (this.timeTicket) {\n      clearInterval(this.timeTicket);\n    }\n\n    this.timeTicket = setInterval(() => {\n      const option = cloneDeep(this.state.option);\n      option.series[0].data.value = (Math.random() * 100).toFixed(2) - 0;\n      this.setState({\n        option: option\n      });\n    }, 2000);\n  }\n\n  componentWillUnmount() {\n    if (this.timeTicket) {\n      clearInterval(this.timeTicket);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ReactEcharts, {\n        style: {\n          height: \"350px\"\n        },\n        option: this.getOption()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Guage;","map":{"version":3,"sources":["C:/Users/Minh Khoa/Desktop/clone/test_unipos_project/webadmin/src/pages/AllCharts/echart/gaugechart.js"],"names":["React","Component","cloneDeep","ReactEcharts","Guage","constructor","props","getOption","tooltip","formatter","toolbox","feature","restore","saveAsImage","series","name","type","detail","axisLine","lineStyle","color","width","data","value","timeTicket","getInitialState","option","state","componentDidMount","clearInterval","setInterval","Math","random","toFixed","setState","componentWillUnmount","render","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAE1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAKnBC,SALmB,GAKP,MAAM;AACd,aAAO;AAEHC,QAAAA,OAAO,EAAE;AACLC,UAAAA,SAAS,EAAE;AADN,SAFN;AAKHC,QAAAA,OAAO,EAAE;AACLC,UAAAA,OAAO,EAAE;AACLC,YAAAA,OAAO,EAAE,EADJ;AAELC,YAAAA,WAAW,EAAE;AAFR;AADJ,SALN;AAWHC,QAAAA,MAAM,EAAE,CACJ;AACIC,UAAAA,IAAI,EAAE,oBADV;AAEIC,UAAAA,IAAI,EAAE,OAFV;AAGIC,UAAAA,MAAM,EAAE;AAAER,YAAAA,SAAS,EAAE;AAAb,WAHZ;AAIIS,UAAAA,QAAQ,EAAE;AACNC,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE,CAAC,CAAC,GAAD,EAAM,SAAN,CAAD,EAAmB,CAAC,GAAD,EAAM,SAAN,CAAnB,EAAqC,CAAC,CAAD,EAAI,SAAJ,CAArC,CADA;AAEPC,cAAAA,KAAK,EAAE;AAFA;AADL,WAJd;AAUIC,UAAAA,IAAI,EAAE,CAAC;AAAEC,YAAAA,KAAK,EAAE,EAAT;AAAaR,YAAAA,IAAI,EAAE;AAAnB,WAAD;AAVV,SADI;AAXL,OAAP;AA0BH,KAhCkB;;AAAA,SAmCnBS,UAnCmB,GAmCN,IAnCM;;AAAA,SAoCnBC,eApCmB,GAoCD,OAAO;AAAEC,MAAAA,MAAM,EAAE,KAAKnB,SAAL;AAAV,KAAP,CApCC;;AAEf,SAAKoB,KAAL,GAAa,KAAKF,eAAL,EAAb;AACH;;AAmCDG,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKJ,UAAT,EAAqB;AACjBK,MAAAA,aAAa,CAAC,KAAKL,UAAN,CAAb;AACH;;AACD,SAAKA,UAAL,GAAkBM,WAAW,CAAC,MAAM;AAChC,YAAMJ,MAAM,GAAGxB,SAAS,CAAC,KAAKyB,KAAL,CAAWD,MAAZ,CAAxB;AACAA,MAAAA,MAAM,CAACZ,MAAP,CAAc,CAAd,EAAiBQ,IAAjB,CAAsBC,KAAtB,GAA8B,CAACQ,IAAI,CAACC,MAAL,KAAgB,GAAjB,EAAsBC,OAAtB,CAA8B,CAA9B,IAAmC,CAAjE;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAEA;AAAV,OAAd;AACH,KAJ4B,EAI1B,IAJ0B,CAA7B;AAKH;;AAEDS,EAAAA,oBAAoB,GAAG;AACnB,QAAI,KAAKX,UAAT,EAAqB;AACjBK,MAAAA,aAAa,CAAC,KAAKL,UAAN,CAAb;AACH;AACJ;;AAEDY,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,6BACI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAArB;AAA0C,QAAA,MAAM,EAAE,KAAK9B,SAAL;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA/DyB;;AAiE9B,eAAeH,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nclass Guage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.getInitialState();\r\n    }\r\n\r\n    getOption = () => {\r\n        return {\r\n\r\n            tooltip: {\r\n                formatter: \"{a} <br/>{b} : {c}%\"\r\n            },\r\n            toolbox: {\r\n                feature: {\r\n                    restore: {},\r\n                    saveAsImage: {}\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Business indicator',\r\n                    type: 'gauge',\r\n                    detail: { formatter: '{value}%' },\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: [[0.2, '#02a499'], [0.8, '#3c4ccf'], [1, '#ec4561']],\r\n                            width: 20\r\n                        }\r\n                    },\r\n                    data: [{ value: 50, name: 'Completion rate' }]\r\n                }\r\n            ]\r\n        };\r\n    };\r\n\r\n\r\n    timeTicket = null;\r\n    getInitialState = () => ({ option: this.getOption() });\r\n\r\n    componentDidMount() {\r\n        if (this.timeTicket) {\r\n            clearInterval(this.timeTicket);\r\n        }\r\n        this.timeTicket = setInterval(() => {\r\n            const option = cloneDeep(this.state.option);\r\n            option.series[0].data.value = (Math.random() * 100).toFixed(2) - 0;\r\n            this.setState({ option: option });\r\n        }, 2000);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        if (this.timeTicket) {\r\n            clearInterval(this.timeTicket);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <ReactEcharts style={{ height: \"350px\" }} option={this.getOption()} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Guage;\r\n\r\n"]},"metadata":{},"sourceType":"module"}