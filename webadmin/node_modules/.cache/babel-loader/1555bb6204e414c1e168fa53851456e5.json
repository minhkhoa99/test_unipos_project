{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minh Khoa\\\\Desktop\\\\clone\\\\test_unipos_project\\\\webadmin\\\\src\\\\App.js\";\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from \"react\";\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\"; // Import Routes all\n\nimport { userRoutes, authRoutes } from \"./routes/allRoutes\"; // Import all middleware\n\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\"; // layouts Format\n\nimport VerticalLayout from \"./components/VerticalLayout/\";\nimport HorizontalLayout from \"./components/HorizontalLayout/\";\nimport NonAuthLayout from \"./components/NonAuthLayout\"; // Import scss\n\nimport \"./assets/scss/theme.scss\"; // Import Firebase Configuration file\n// import { initFirebaseBackend } from \"./helpers/firebase_helper\"\n\nimport fakeBackend from \"./helpers/AuthType/fakeBackend\"; // Activating fake backend\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfakeBackend(); // const firebaseConfig = {\n//   apiKey: process.env.REACT_APP_APIKEY,\n//   authDomain: process.env.REACT_APP_AUTHDOMAIN,\n//   databaseURL: process.env.REACT_APP_DATABASEURL,\n//   projectId: process.env.REACT_APP_PROJECTID,\n//   storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n//   messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n//   appId: process.env.REACT_APP_APPID,\n//   measurementId: process.env.REACT_APP_MEASUREMENTID,\n// }\n// init firebase backend\n// initFirebaseBackend(firebaseConfig)\n\nconst App = props => {\n  function getLayout() {\n    let layoutCls = VerticalLayout;\n\n    switch (props.layout.layoutType) {\n      case \"horizontal\":\n        layoutCls = HorizontalLayout;\n        break;\n\n      default:\n        layoutCls = VerticalLayout;\n        break;\n    }\n\n    return layoutCls;\n  }\n\n  const Layout = getLayout();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [authRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(Authmiddleware, {\n          path: route.path,\n          layout: NonAuthLayout,\n          component: route.component,\n          isAuthProtected: false\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)), userRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(Authmiddleware, {\n          path: route.path,\n          layout: Layout,\n          component: route.component,\n          isAuthProtected: true,\n          exact: true\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nApp.propTypes = {\n  layout: PropTypes.any\n};\n\nconst mapStateToProps = state => {\n  return {\n    layout: state.Layout\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Minh Khoa/Desktop/clone/test_unipos_project/webadmin/src/App.js"],"names":["PropTypes","React","useEffect","Switch","BrowserRouter","Router","connect","userRoutes","authRoutes","Authmiddleware","VerticalLayout","HorizontalLayout","NonAuthLayout","fakeBackend","App","props","getLayout","layoutCls","layout","layoutType","Layout","map","route","idx","path","component","propTypes","any","mapStateToProps","state"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAASC,MAAT,EAAiBC,aAAa,IAAIC,MAAlC,QAAgD,kBAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,oBAAvC,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,oCAA3B,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,aAAP,MAA0B,4BAA1B,C,CAEA;;AACA,OAAO,0BAAP,C,CAEA;AACA;;AAEA,OAAOC,WAAP,MAAwB,gCAAxB,C,CAEA;;;AACAA,WAAW,G,CAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAEnB,WAASC,SAAT,GAAqB;AACnB,QAAIC,SAAS,GAAGP,cAAhB;;AACA,YAAQK,KAAK,CAACG,MAAN,CAAaC,UAArB;AACE,WAAK,YAAL;AACEF,QAAAA,SAAS,GAAGN,gBAAZ;AACA;;AACF;AACEM,QAAAA,SAAS,GAAGP,cAAZ;AACA;AANJ;;AAQA,WAAOO,SAAP;AACD;;AAED,QAAMG,MAAM,GAAGJ,SAAS,EAAxB;AACA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,mBACGR,UAAU,CAACa,GAAX,CAAe,CAACC,KAAD,EAAQC,GAAR,kBACd,QAAC,cAAD;AACE,UAAA,IAAI,EAAED,KAAK,CAACE,IADd;AAEE,UAAA,MAAM,EAAEZ,aAFV;AAGE,UAAA,SAAS,EAAEU,KAAK,CAACG,SAHnB;AAKE,UAAA,eAAe,EAAE;AALnB,WAIOF,GAJP;AAAA;AAAA;AAAA;AAAA,gBADD,CADH,EAWGhB,UAAU,CAACc,GAAX,CAAe,CAACC,KAAD,EAAQC,GAAR,kBACd,QAAC,cAAD;AACE,UAAA,IAAI,EAAED,KAAK,CAACE,IADd;AAEE,UAAA,MAAM,EAAEJ,MAFV;AAGE,UAAA,SAAS,EAAEE,KAAK,CAACG,SAHnB;AAKE,UAAA,eAAe,EAAE,IALnB;AAME,UAAA,KAAK;AANP,WAIOF,GAJP;AAAA;AAAA;AAAA;AAAA,gBADD,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA5CD;;KAAMT,G;AA8CNA,GAAG,CAACY,SAAJ,GAAgB;AACdR,EAAAA,MAAM,EAAElB,SAAS,CAAC2B;AADJ,CAAhB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLX,IAAAA,MAAM,EAAEW,KAAK,CAACT;AADT,GAAP;AAGD,CAJD;;AAMA,eAAed,OAAO,CAACsB,eAAD,EAAkB,IAAlB,CAAP,CAA+Bd,GAA/B,CAAf","sourcesContent":["import PropTypes from 'prop-types'\r\nimport React, {useEffect} from \"react\"\r\n\r\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\n\r\n// Import Routes all\r\nimport { userRoutes, authRoutes } from \"./routes/allRoutes\"\r\n\r\n// Import all middleware\r\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\"\r\n\r\n// layouts Format\r\nimport VerticalLayout from \"./components/VerticalLayout/\"\r\nimport HorizontalLayout from \"./components/HorizontalLayout/\"\r\nimport NonAuthLayout from \"./components/NonAuthLayout\"\r\n\r\n// Import scss\r\nimport \"./assets/scss/theme.scss\"\r\n\r\n// Import Firebase Configuration file\r\n// import { initFirebaseBackend } from \"./helpers/firebase_helper\"\r\n\r\nimport fakeBackend from \"./helpers/AuthType/fakeBackend\"\r\n\r\n// Activating fake backend\r\nfakeBackend()\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: process.env.REACT_APP_APIKEY,\r\n//   authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n//   databaseURL: process.env.REACT_APP_DATABASEURL,\r\n//   projectId: process.env.REACT_APP_PROJECTID,\r\n//   storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n//   messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n//   appId: process.env.REACT_APP_APPID,\r\n//   measurementId: process.env.REACT_APP_MEASUREMENTID,\r\n// }\r\n\r\n// init firebase backend\r\n// initFirebaseBackend(firebaseConfig)\r\n\r\nconst App = props => {\r\n\r\n  function getLayout() {\r\n    let layoutCls = VerticalLayout\r\n    switch (props.layout.layoutType) {\r\n      case \"horizontal\":\r\n        layoutCls = HorizontalLayout\r\n        break\r\n      default:\r\n        layoutCls = VerticalLayout\r\n        break\r\n    }\r\n    return layoutCls\r\n  }\r\n\r\n  const Layout = getLayout()\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <Switch>\r\n          {authRoutes.map((route, idx) => (\r\n            <Authmiddleware\r\n              path={route.path}\r\n              layout={NonAuthLayout}\r\n              component={route.component}\r\n              key={idx}\r\n              isAuthProtected={false}\r\n            />\r\n          ))}\r\n\r\n          {userRoutes.map((route, idx) => (\r\n            <Authmiddleware\r\n              path={route.path}\r\n              layout={Layout}\r\n              component={route.component}\r\n              key={idx}\r\n              isAuthProtected={true}\r\n              exact\r\n            />\r\n          ))}\r\n        </Switch>\r\n      </Router>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nApp.propTypes = {\r\n  layout: PropTypes.any\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    layout: state.Layout,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(App)\r\n"]},"metadata":{},"sourceType":"module"}